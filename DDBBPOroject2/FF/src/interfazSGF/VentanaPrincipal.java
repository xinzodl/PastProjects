package interfazSGF;
import java.util.*;
import javax.naming.ldap.StartTlsRequest;

/**Interfaz gr�fica del sistema gestor de ficheros*/
public class VentanaPrincipal extends javax.swing.JFrame {
    static MemoriaIntermedia memoria=null;
    private boolean abierto = false;
    private InterfazGestorFF principal = null;
    private InterfazEsquema estructura = null;
    private int archivo_actual=0;
    private BufferDeRegistro buf_in = new BufferDeRegistro();
    private BufferDeRegistro buf_out = new BufferDeRegistro();
    
    private javax.swing.JTextArea[] jTFs=new javax.swing.JTextArea[BufferDeRegistro.titulos.length];
    private javax.swing.JButton[] botones;
    private javax.swing.JComboBox[] combos;
    
    
    VentanaPrincipal(){
        this(null,null);
    }
    
    /** Creates new form VentanaPrincipal */
    VentanaPrincipal(InterfazGestorFF principal, InterfazEsquema estructura) {
        initComponents();
        setTitle(BufferDeRegistro.titulo);
        this.principal=principal;
        this.estructura=estructura;
        cargar_campos();           
        cargar_menu_listados();
    
    botones=new javax.swing.JButton[]{
        jBAbrirSGFF,jBActualizarRegistro,jBAyuda,jBBorrarRegistro,
        jBComenzarConsulta,jBGuardarSGFF,jBGuardarSGFF,jBImportarSGFF,
        jBInsertarRegistro,jBIrAlHV,jBIrAlHijo,
        jBIrAlPV,jBIrAlPadre,jBNuevaFicha,jBRegistroAnterior,jBRegistroSiguiente,jBSSGFF,jBCaracteres, jBAccInv, jBListar
     };
    combos=new javax.swing.JComboBox[]{
        jCBArchivos, jCBHijos, jCBPadresV, jCBHijosV
    };
        abrir(false);//Pongo en orden la barra de herramientas
         
    }
    
    /** Thbotones called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPMListar = new javax.swing.JPopupMenu();
        jPanel = new javax.swing.JPanel();
        jPCampos = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLStatusBar = new javax.swing.JLabel();
        jPAccesos = new javax.swing.JPanel();
        jLNAccesos = new javax.swing.JLabel();
        jTFNAccesos = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jPBotones1 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        jBAbrirSGFF = new javax.swing.JButton();
        jBGuardarSGFF = new javax.swing.JButton();
        jBImportarSGFF = new javax.swing.JButton();
        jToolBar2 = new javax.swing.JToolBar();
        jBNuevaFicha = new javax.swing.JButton();
        jCBArchivos = new javax.swing.JComboBox();
        jBComenzarConsulta = new javax.swing.JButton();
        jBRegistroAnterior = new javax.swing.JButton();
        jBRegistroSiguiente = new javax.swing.JButton();
        jBListar = new javax.swing.JButton();
        jBAccInv = new javax.swing.JButton();
        jToolBar3 = new javax.swing.JToolBar();
        jBInsertarRegistro = new javax.swing.JButton();
        jBBorrarRegistro = new javax.swing.JButton();
        jBActualizarRegistro = new javax.swing.JButton();
        jToolBar4 = new javax.swing.JToolBar();
        jBCaracteres = new javax.swing.JButton();
        jBAyuda = new javax.swing.JButton();
        jBSSGFF = new javax.swing.JButton();
        jPBotones2 = new javax.swing.JPanel();
        jToolBar5 = new javax.swing.JToolBar();
        jBIrAlPadre = new javax.swing.JButton();
        jBIrAlHijo = new javax.swing.JButton();
        jCBHijos = new javax.swing.JComboBox();
        jBIrAlPV = new javax.swing.JButton();
        jCBPadresV = new javax.swing.JComboBox();
        jBIrAlHV = new javax.swing.JButton();
        jCBHijosV = new javax.swing.JComboBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuEsquema = new javax.swing.JMenu();
        jMenuEsquemaAbrir = new javax.swing.JMenuItem();
        jMenuEsquemaCerrar = new javax.swing.JMenuItem();
        jMenuEsquemaGuardar = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        jMenuEsquemaExit = new javax.swing.JMenuItem();
        jMenuRegistro = new javax.swing.JMenu();
        jMenuNuevo = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JSeparator();
        jMenuInsertar = new javax.swing.JMenuItem();
        jMenuBorrar = new javax.swing.JMenuItem();
        jMenuActualizar = new javax.swing.JMenuItem();
        jMenuBusq = new javax.swing.JMenu();
        jMenuComenzar = new javax.swing.JMenuItem();
        jMenuSiguiente = new javax.swing.JMenuItem();
        jMenuAnterior = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JSeparator();
        jMenuVinculo = new javax.swing.JMenu();
        jMenuPadre = new javax.swing.JMenuItem();
        jMenuHijo = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JSeparator();
        jMenuPV = new javax.swing.JMenuItem();
        jMenuHV = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JSeparator();
        jMenuBusqCompleja = new javax.swing.JMenuItem();
        jSeparator10 = new javax.swing.JSeparator();
        jMenuAccInv = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JSeparator();
        jMenuListados = new javax.swing.JMenu();
        jMenuMantenimiento = new javax.swing.JMenu();
        jMenuMantImportar = new javax.swing.JMenuItem();
        jSeparator7 = new javax.swing.JSeparator();
        jMenuMantCompactar = new javax.swing.JMenuItem();
        jMenuMantReorganizar = new javax.swing.JMenuItem();
        jSeparator8 = new javax.swing.JSeparator();
        jMenuMantCreaInd = new javax.swing.JMenuItem();
        jMenuMantDestInd = new javax.swing.JMenuItem();
        jMenuMantReorgInd = new javax.swing.JMenuItem();
        jMenuHelp = new javax.swing.JMenu();
        jMenuHelpChar = new javax.swing.JMenuItem();
        jSeparator9 = new javax.swing.JSeparator();
        jMenuHelpAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sistema Gestor De Ficheros 'Los Conductores'");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel.setMinimumSize(new java.awt.Dimension(374, 3000));
        jPanel.setPreferredSize(new java.awt.Dimension(850, 3000));
        jPanel.setLayout(new java.awt.BorderLayout());

        jPCampos.setMinimumSize(new java.awt.Dimension(0, 1600));
        jPCampos.setPreferredSize(new java.awt.Dimension(0, 1600));
        jPCampos.setLayout(new javax.swing.BoxLayout(jPCampos, javax.swing.BoxLayout.Y_AXIS));
        jPanel.add(jPCampos, java.awt.BorderLayout.CENTER);

        jPanel4.setMaximumSize(new java.awt.Dimension(134, 30));
        jPanel4.setMinimumSize(new java.awt.Dimension(134, 30));
        jPanel4.setLayout(new java.awt.BorderLayout());

        jPanel14.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLStatusBar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLStatusBar.setText(" ");
        jLStatusBar.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jPanel14.add(jLStatusBar);

        jPanel4.add(jPanel14, java.awt.BorderLayout.WEST);

        jLNAccesos.setText("Nº de accesos");
        jPAccesos.add(jLNAccesos);

        jTFNAccesos.setColumns(4);
        jTFNAccesos.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTFNAccesos.setText("0");
        jPAccesos.add(jTFNAccesos);

        jPanel4.add(jPAccesos, java.awt.BorderLayout.EAST);

        jPanel.add(jPanel4, java.awt.BorderLayout.SOUTH);

        jPanel2.setMaximumSize(new java.awt.Dimension(374, 60));
        jPanel2.setMinimumSize(new java.awt.Dimension(374, 60));
        jPanel2.setPreferredSize(new java.awt.Dimension(374, 60));
        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.Y_AXIS));

        jPBotones1.setPreferredSize(new java.awt.Dimension(278, 20));
        jPBotones1.setLayout(new javax.swing.BoxLayout(jPBotones1, javax.swing.BoxLayout.LINE_AXIS));

        jBAbrirSGFF.setToolTipText("Abrir sistema de ficheros");
        jBAbrirSGFF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAbrirSGFFActionPerformed(evt);
            }
        });
        jToolBar1.add(jBAbrirSGFF);

        jBGuardarSGFF.setToolTipText("Guardar sistema de ficheros");
        jBGuardarSGFF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGuardarSGFFActionPerformed(evt);
            }
        });
        jToolBar1.add(jBGuardarSGFF);

        jBImportarSGFF.setToolTipText("Importar fichero");
        jBImportarSGFF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBImportarSGFFActionPerformed(evt);
            }
        });
        jToolBar1.add(jBImportarSGFF);

        jPBotones1.add(jToolBar1);

        jBNuevaFicha.setToolTipText("Nueva ficha");
        jBNuevaFicha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNuevaFichaActionPerformed(evt);
            }
        });
        jToolBar2.add(jBNuevaFicha);

        jCBArchivos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBArchivosItemStateChanged(evt);
            }
        });
        jToolBar2.add(jCBArchivos);

        jBComenzarConsulta.setToolTipText("Comenzar consulta");
        jBComenzarConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBComenzarConsultaActionPerformed(evt);
            }
        });
        jToolBar2.add(jBComenzarConsulta);

        jBRegistroAnterior.setToolTipText("Registro anterior");
        jBRegistroAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBRegistroAnteriorActionPerformed(evt);
            }
        });
        jToolBar2.add(jBRegistroAnterior);

        jBRegistroSiguiente.setToolTipText("Registro siguiente");
        jBRegistroSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBRegistroSiguienteActionPerformed(evt);
            }
        });
        jToolBar2.add(jBRegistroSiguiente);

        jBListar.setComponentPopupMenu(jPMListar);
        jBListar.setToolTipText("Listar");
        jBListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBListarActionPerformed(evt);
            }
        });
        jToolBar2.add(jBListar);

        jBAccInv.setComponentPopupMenu(jPMListar);
        jBAccInv.setToolTipText("Acceso invertido");
        jBAccInv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAccInvActionPerformed(evt);
            }
        });
        jToolBar2.add(jBAccInv);

        jPBotones1.add(jToolBar2);

        jBInsertarRegistro.setToolTipText("Insertar registro");
        jBInsertarRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBInsertarRegistroActionPerformed(evt);
            }
        });
        jToolBar3.add(jBInsertarRegistro);

        jBBorrarRegistro.setToolTipText("Borrar registro");
        jBBorrarRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBorrarRegistroActionPerformed(evt);
            }
        });
        jToolBar3.add(jBBorrarRegistro);

        jBActualizarRegistro.setToolTipText("Actualizar registro");
        jBActualizarRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBActualizarRegistroActionPerformed(evt);
            }
        });
        jToolBar3.add(jBActualizarRegistro);

        jPBotones1.add(jToolBar3);

        jBCaracteres.setFont(new java.awt.Font("Arial Black", 3, 11)); // NOI18N
        jBCaracteres.setText("\\?");
        jBCaracteres.setToolTipText("Consulta los caracteres especiales");
        jBCaracteres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCaracteresActionPerformed(evt);
            }
        });
        jToolBar4.add(jBCaracteres);

        jBAyuda.setToolTipText("Ayuda");
        jBAyuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAyudaActionPerformed(evt);
            }
        });
        jToolBar4.add(jBAyuda);

        jBSSGFF.setToolTipText("Salir del gestor de ficheros");
        jBSSGFF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSSGFFActionPerformed(evt);
            }
        });
        jToolBar4.add(jBSSGFF);

        jPBotones1.add(jToolBar4);

        jPanel2.add(jPBotones1);

        jPBotones2.setPreferredSize(new java.awt.Dimension(149, 20));
        jPBotones2.setLayout(new javax.swing.BoxLayout(jPBotones2, javax.swing.BoxLayout.LINE_AXIS));

        jToolBar5.setMinimumSize(new java.awt.Dimension(137, 25));

        jBIrAlPadre.setToolTipText("Ir al padre");
        jBIrAlPadre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBIrAlPadreActionPerformed(evt);
            }
        });
        jToolBar5.add(jBIrAlPadre);

        jBIrAlHijo.setToolTipText("Ir al hijo nº");
        jBIrAlHijo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBIrAlHijoActionPerformed(evt);
            }
        });
        jToolBar5.add(jBIrAlHijo);

        jCBHijos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBHijosItemStateChanged(evt);
            }
        });
        jToolBar5.add(jCBHijos);

        jBIrAlPV.setToolTipText("Ir al padre virtual nº");
        jBIrAlPV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBIrAlPVActionPerformed(evt);
            }
        });
        jToolBar5.add(jBIrAlPV);

        jCBPadresV.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBPadresVItemStateChanged(evt);
            }
        });
        jToolBar5.add(jCBPadresV);

        jBIrAlHV.setToolTipText("Ir al hijo virtual nº");
        jBIrAlHV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBIrAlHVActionPerformed(evt);
            }
        });
        jToolBar5.add(jBIrAlHV);

        jCBHijosV.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBHijosVItemStateChanged(evt);
            }
        });
        jToolBar5.add(jCBHijosV);

        jPBotones2.add(jToolBar5);

        jPanel2.add(jPBotones2);

        jPanel.add(jPanel2, java.awt.BorderLayout.NORTH);

        getContentPane().add(jPanel, java.awt.BorderLayout.CENTER);

        jMenuBar1.setMinimumSize(new java.awt.Dimension(840, 2));

        jMenuEsquema.setText("Esquema");

        jMenuEsquemaAbrir.setText("Abrir");
        jMenuEsquemaAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuEsquemaAbrirActionPerformed(evt);
            }
        });
        jMenuEsquema.add(jMenuEsquemaAbrir);

        jMenuEsquemaCerrar.setText("Cerrar");
        jMenuEsquemaCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuEsquemaCerrarActionPerformed(evt);
            }
        });
        jMenuEsquema.add(jMenuEsquemaCerrar);

        jMenuEsquemaGuardar.setText("Guardar");
        jMenuEsquemaGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuEsquemaGuardarActionPerformed(evt);
            }
        });
        jMenuEsquema.add(jMenuEsquemaGuardar);
        jMenuEsquema.add(jSeparator1);

        jMenuEsquemaExit.setText("Salir");
        jMenuEsquemaExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuEsquemaExitActionPerformed(evt);
            }
        });
        jMenuEsquema.add(jMenuEsquemaExit);

        jMenuBar1.add(jMenuEsquema);

        jMenuRegistro.setText("Registro");

        jMenuNuevo.setText("Nueva ficha");
        jMenuNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuNuevoActionPerformed(evt);
            }
        });
        jMenuRegistro.add(jMenuNuevo);
        jMenuRegistro.add(jSeparator2);

        jMenuInsertar.setText("Insertar en");
        jMenuInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuInsertarActionPerformed(evt);
            }
        });
        jMenuRegistro.add(jMenuInsertar);

        jMenuBorrar.setText("Borrar de");
        jMenuBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuBorrarActionPerformed(evt);
            }
        });
        jMenuRegistro.add(jMenuBorrar);

        jMenuActualizar.setText("Actualizar registros del");
        jMenuActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuActualizarActionPerformed(evt);
            }
        });
        jMenuRegistro.add(jMenuActualizar);

        jMenuBar1.add(jMenuRegistro);

        jMenuBusq.setText("Búsqueda");

        jMenuComenzar.setText("Comenzar búsqueda sobre");
        jMenuComenzar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuComenzarActionPerformed(evt);
            }
        });
        jMenuBusq.add(jMenuComenzar);

        jMenuSiguiente.setText("Siguiente");
        jMenuSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuSiguienteActionPerformed(evt);
            }
        });
        jMenuBusq.add(jMenuSiguiente);

        jMenuAnterior.setText("Anterior");
        jMenuAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuAnteriorActionPerformed(evt);
            }
        });
        jMenuBusq.add(jMenuAnterior);
        jMenuBusq.add(jSeparator4);

        jMenuVinculo.setText("Ir a...");

        jMenuPadre.setText("Registro padre");
        jMenuPadre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuPadreActionPerformed(evt);
            }
        });
        jMenuVinculo.add(jMenuPadre);

        jMenuHijo.setText("Primer hijo");
        jMenuHijo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuHijoActionPerformed(evt);
            }
        });
        jMenuVinculo.add(jMenuHijo);
        jMenuVinculo.add(jSeparator6);

        jMenuPV.setText("Padre virtual");
        jMenuPV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuPVActionPerformed(evt);
            }
        });
        jMenuVinculo.add(jMenuPV);

        jMenuHV.setText("Hijo virtual");
        jMenuHV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuHVActionPerformed(evt);
            }
        });
        jMenuVinculo.add(jMenuHV);

        jMenuBusq.add(jMenuVinculo);
        jMenuBusq.add(jSeparator5);

        jMenuBusqCompleja.setText("Busqueda avanzada");
        jMenuBusqCompleja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuBusqComplejaActionPerformed(evt);
            }
        });
        jMenuBusq.add(jMenuBusqCompleja);
        jMenuBusq.add(jSeparator10);

        jMenuAccInv.setText("Acceso Invertido");
        jMenuAccInv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuAccInvActionPerformed(evt);
            }
        });
        jMenuBusq.add(jMenuAccInv);
        jMenuBusq.add(jSeparator3);

        jMenuListados.setText("Listados");
        jMenuBusq.add(jMenuListados);

        jMenuBar1.add(jMenuBusq);

        jMenuMantenimiento.setText("Mantenimiento");

        jMenuMantImportar.setText("Importar");
        jMenuMantImportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuMantImportarActionPerformed(evt);
            }
        });
        jMenuMantenimiento.add(jMenuMantImportar);
        jMenuMantenimiento.add(jSeparator7);

        jMenuMantCompactar.setText("Compactar");
        jMenuMantCompactar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuMantCompactarActionPerformed(evt);
            }
        });
        jMenuMantenimiento.add(jMenuMantCompactar);

        jMenuMantReorganizar.setText("Reorganizar espacio");
        jMenuMantReorganizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuMantReorganizarActionPerformed(evt);
            }
        });
        jMenuMantenimiento.add(jMenuMantReorganizar);
        jMenuMantenimiento.add(jSeparator8);

        jMenuMantCreaInd.setText("Crear índice");
        jMenuMantCreaInd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuMantCreaIndActionPerformed(evt);
            }
        });
        jMenuMantenimiento.add(jMenuMantCreaInd);

        jMenuMantDestInd.setText("Destruir índice");
        jMenuMantDestInd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuMantDestIndActionPerformed(evt);
            }
        });
        jMenuMantenimiento.add(jMenuMantDestInd);

        jMenuMantReorgInd.setText("Reorganizar índice");
        jMenuMantReorgInd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuMantReorgIndActionPerformed(evt);
            }
        });
        jMenuMantenimiento.add(jMenuMantReorgInd);

        jMenuBar1.add(jMenuMantenimiento);

        jMenuHelp.setText("Ayuda");

        jMenuHelpChar.setText("Etiquetas especiales...");
        jMenuHelpChar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuHelpCharActionPerformed(evt);
            }
        });
        jMenuHelp.add(jMenuHelpChar);
        jMenuHelp.add(jSeparator9);

        jMenuHelpAbout.setText("Acerca de...");
        jMenuHelpAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuHelpAboutActionPerformed(evt);
            }
        });
        jMenuHelp.add(jMenuHelpAbout);

        jMenuBar1.add(jMenuHelp);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuBorrarActionPerformed
        haz_borrado();
    }//GEN-LAST:event_jMenuBorrarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        jLStatusBar.setText("Ejecutando cerrar_sistema...");
      if(memoria!=null)memoria.resetContadorAccesos();        
        if(principal!=null){            
            System.out.println(principal.cerrar_sistema());        
            System.out.println("N� Accesos: "+jTFNAccesos.getText());
        }     
    }//GEN-LAST:event_formWindowClosing

    private void jBListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBListarActionPerformed
        encender_popup_de_listado();
    }//GEN-LAST:event_jBListarActionPerformed

    private void jBAccInvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAccInvActionPerformed
        acc_invertido();
    }//GEN-LAST:event_jBAccInvActionPerformed

    private void jMenuPopupListadoiMenuDragMouseExited(javax.swing.event.MenuDragMouseEvent evt,int i) {                                                                
        apagar_popup_de_listado();
    }  

    private void jMenuPopupListadoiActionPerformed(java.awt.event.ActionEvent evt, int i) {                                                            
        listado(i); 
    } 
    private void jMenuAccInvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuAccInvActionPerformed
        acc_invertido();
    }//GEN-LAST:event_jMenuAccInvActionPerformed

    private void jBCaracteresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCaracteresActionPerformed
        caracteres(evt);
    }//GEN-LAST:event_jBCaracteresActionPerformed

    private void jMenuHelpCharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuHelpCharActionPerformed
        caracteres(evt);
    }//GEN-LAST:event_jMenuHelpCharActionPerformed

    private void jMenuMantReorgIndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuMantReorgIndActionPerformed
        reorg_ind();
    }//GEN-LAST:event_jMenuMantReorgIndActionPerformed

    private void jMenuMantDestIndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuMantDestIndActionPerformed
        dest_ind();
    }//GEN-LAST:event_jMenuMantDestIndActionPerformed

    private void jMenuMantCreaIndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuMantCreaIndActionPerformed
        crea_ind();
    }//GEN-LAST:event_jMenuMantCreaIndActionPerformed

    private void jMenuMantReorganizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuMantReorganizarActionPerformed
        reorganiza();
    }//GEN-LAST:event_jMenuMantReorganizarActionPerformed

    private void jMenuMantCompactarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuMantCompactarActionPerformed
        compactar();
    }//GEN-LAST:event_jMenuMantCompactarActionPerformed

    private void jMenuMantImportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuMantImportarActionPerformed
        importa();
    }//GEN-LAST:event_jMenuMantImportarActionPerformed

    private void jMenuHVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuHVActionPerformed
         buscaHV();
    }//GEN-LAST:event_jMenuHVActionPerformed

    private void jMenuPVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuPVActionPerformed
         buscaPV();
    }//GEN-LAST:event_jMenuPVActionPerformed

    private void jMenuHijoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuHijoActionPerformed
        buscaRH();
    }//GEN-LAST:event_jMenuHijoActionPerformed

    private void jMenuPadreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuPadreActionPerformed
        buscaRP();
    }//GEN-LAST:event_jMenuPadreActionPerformed

    private void jMenuBusqComplejaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuBusqComplejaActionPerformed
        busq_compleja();
    }//GEN-LAST:event_jMenuBusqComplejaActionPerformed

    private void jMenuAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuAnteriorActionPerformed
        haz_anterior();
    }//GEN-LAST:event_jMenuAnteriorActionPerformed

    private void jMenuSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuSiguienteActionPerformed
        haz_siguiente();
    }//GEN-LAST:event_jMenuSiguienteActionPerformed

    private void jMenuComenzarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuComenzarActionPerformed
        comienza_buscar();
    }//GEN-LAST:event_jMenuComenzarActionPerformed

    private void jMenuActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuActualizarActionPerformed
        haz_actualizacion();
    }//GEN-LAST:event_jMenuActualizarActionPerformed

    private void jMenuInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuInsertarActionPerformed
        haz_insercion();
    }//GEN-LAST:event_jMenuInsertarActionPerformed

    private void jMenuNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuNuevoActionPerformed
        nuevaficha();
    }//GEN-LAST:event_jMenuNuevoActionPerformed

    private void jMenuEsquemaExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuEsquemaExitActionPerformed
        saliendo();
    }//GEN-LAST:event_jMenuEsquemaExitActionPerformed

    private void jMenuEsquemaGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuEsquemaGuardarActionPerformed
        save_all();
    }//GEN-LAST:event_jMenuEsquemaGuardarActionPerformed

    private void jMenuEsquemaCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuEsquemaCerrarActionPerformed
        cerrarFichero();
    }//GEN-LAST:event_jMenuEsquemaCerrarActionPerformed

    private void jBNuevaFichaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNuevaFichaActionPerformed
        nuevaficha();
    }//GEN-LAST:event_jBNuevaFichaActionPerformed

    private void jBRegistroAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBRegistroAnteriorActionPerformed
        haz_anterior();
    }//GEN-LAST:event_jBRegistroAnteriorActionPerformed

    private void jBIrAlHVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBIrAlHVActionPerformed
        buscaHV();
    }//GEN-LAST:event_jBIrAlHVActionPerformed

    private void jBIrAlPVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBIrAlPVActionPerformed
        buscaPV();
    }//GEN-LAST:event_jBIrAlPVActionPerformed

    private void jBIrAlHijoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBIrAlHijoActionPerformed
        buscaRH();
    }//GEN-LAST:event_jBIrAlHijoActionPerformed

    private void jBIrAlPadreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBIrAlPadreActionPerformed
        buscaRP();
    }//GEN-LAST:event_jBIrAlPadreActionPerformed

    private void jBActualizarRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBActualizarRegistroActionPerformed
        haz_actualizacion();
    }//GEN-LAST:event_jBActualizarRegistroActionPerformed

    private void jBBorrarRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBorrarRegistroActionPerformed
        haz_borrado();
    }//GEN-LAST:event_jBBorrarRegistroActionPerformed

    private void jBInsertarRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBInsertarRegistroActionPerformed
        haz_insercion();
    }//GEN-LAST:event_jBInsertarRegistroActionPerformed

    private void jBRegistroSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBRegistroSiguienteActionPerformed
        haz_siguiente();
    }//GEN-LAST:event_jBRegistroSiguienteActionPerformed

    private void jBComenzarConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBComenzarConsultaActionPerformed
        comienza_buscar();
    }//GEN-LAST:event_jBComenzarConsultaActionPerformed

    private void jBImportarSGFFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBImportarSGFFActionPerformed
        importa();
    }//GEN-LAST:event_jBImportarSGFFActionPerformed

    private void jBGuardarSGFFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGuardarSGFFActionPerformed
        save_all();
    }//GEN-LAST:event_jBGuardarSGFFActionPerformed

    private void jBAbrirSGFFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAbrirSGFFActionPerformed
        if(!abierto)abrirFichero();
        else cerrarFichero();
    }//GEN-LAST:event_jBAbrirSGFFActionPerformed

    private void jMenuEsquemaAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuEsquemaAbrirActionPerformed
        if(!abierto)abrirFichero();
        else cerrarFichero();
    }//GEN-LAST:event_jMenuEsquemaAbrirActionPerformed

    private void jBSSGFFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSSGFFActionPerformed
        saliendo();
    }//GEN-LAST:event_jBSSGFFActionPerformed

    private void jBAyudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAyudaActionPerformed
        about(evt);
    }//GEN-LAST:event_jBAyudaActionPerformed

    private void jMenuHelpAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuHelpAboutActionPerformed
        about(evt);
    }//GEN-LAST:event_jMenuHelpAboutActionPerformed

    private void jCBHijosVItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBHijosVItemStateChanged
        if(jCBHijosV.getSelectedIndex()!=-1){
            actualizaMenusA(jCBHijosV.getSelectedItem().toString());
            jBIrAlHV.setEnabled(true);
        }
    }//GEN-LAST:event_jCBHijosVItemStateChanged

    private void jCBPadresVItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBPadresVItemStateChanged
        if(jCBPadresV.getSelectedIndex()!=-1){
            actualizaMenusA(jCBPadresV.getSelectedItem().toString());
            jBIrAlPV.setEnabled(true);
        }
    }//GEN-LAST:event_jCBPadresVItemStateChanged

    private void jCBHijosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBHijosItemStateChanged
        if(jCBHijos.getSelectedIndex()!=-1){
            actualizaMenusA(jCBHijos.getSelectedItem().toString());
            jBIrAlHijo.setEnabled(true);
        }
    }//GEN-LAST:event_jCBHijosItemStateChanged

    private void jCBArchivosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBArchivosItemStateChanged
        if(jCBArchivos.getSelectedIndex()!=-1)actualizaMenusA(jCBArchivos.getSelectedItem().toString());
    }//GEN-LAST:event_jCBArchivosItemStateChanged

    private void about(java.awt.event.ActionEvent evt){
        dialogoCreditos dlg = new dialogoCreditos(this);
        java.awt.Dimension dlgSize = dlg.getPreferredSize();
        java.awt.Dimension frmSize = getSize();
        java.awt.Point loc = getLocation();
        dlg.setLocation( (frmSize.width - dlgSize.width) / 2 + loc.x,
                        (frmSize.height - dlgSize.height) / 2 + loc.y);
        dlg.setModal(true);
        dlg.pack();
        dlg.show();
    }
    
    private void caracteres(java.awt.event.ActionEvent evt){
        VentanaCaracteres dlg = new VentanaCaracteres(this,true);
        //java.awt.Dimension dlgSize = dlg.getPreferredSize();
        //java.awt.Dimension frmSize = getSize();
        //java.awt.Point loc = getLocation();
        //dlg.setLocation( (frmSize.width - dlgSize.width) / 2 + loc.x,
        //                (frmSize.height - dlgSize.height) / 2 + loc.y);        
        dlg.pack();
        dlg.show();
    }
    
    /*
    public static void main(String args[]) {
        lanzar(null,null);
    }*/
    
    /**
     *Lanza una nueva ventana del gestor de ficheros con un determinado esquema de archivos.
     * @param principal la instancia de una implementaci�n de gestor de ficheros de la que la ventana ser� interfaz.
     *@param estructura la instancia de una implementaci�n de esquema de archivos.
     **/
    public static void lanzar(InterfazGestorFF principal, InterfazEsquema estructura){
        
        try {
      javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
    }
    catch(Exception e) {
      e.printStackTrace();
    }
        VentanaPrincipal frame = new VentanaPrincipal(principal, estructura);
        MemoriaIntermedia.ventana=frame;
        frame.setSize(856, 674);                
        frame.validate();
        
    //Locate the window
    java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
    java.awt.Dimension frameSize = frame.getSize();
    frameSize.height = screenSize.height;
    frameSize.width = screenSize.width;
    frame.setLocation(0, 0);
    frame.setVisible(true);
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAbrirSGFF;
    private javax.swing.JButton jBAccInv;
    private javax.swing.JButton jBActualizarRegistro;
    private javax.swing.JButton jBAyuda;
    private javax.swing.JButton jBBorrarRegistro;
    private javax.swing.JButton jBCaracteres;
    private javax.swing.JButton jBComenzarConsulta;
    private javax.swing.JButton jBGuardarSGFF;
    private javax.swing.JButton jBImportarSGFF;
    private javax.swing.JButton jBInsertarRegistro;
    private javax.swing.JButton jBIrAlHV;
    private javax.swing.JButton jBIrAlHijo;
    private javax.swing.JButton jBIrAlPV;
    private javax.swing.JButton jBIrAlPadre;
    private javax.swing.JButton jBListar;
    private javax.swing.JButton jBNuevaFicha;
    private javax.swing.JButton jBRegistroAnterior;
    private javax.swing.JButton jBRegistroSiguiente;
    private javax.swing.JButton jBSSGFF;
    private javax.swing.JComboBox jCBArchivos;
    private javax.swing.JComboBox jCBHijos;
    private javax.swing.JComboBox jCBHijosV;
    private javax.swing.JComboBox jCBPadresV;
    private javax.swing.JLabel jLNAccesos;
    private javax.swing.JLabel jLStatusBar;
    private javax.swing.JMenuItem jMenuAccInv;
    private javax.swing.JMenuItem jMenuActualizar;
    private javax.swing.JMenuItem jMenuAnterior;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuBorrar;
    private javax.swing.JMenu jMenuBusq;
    private javax.swing.JMenuItem jMenuBusqCompleja;
    private javax.swing.JMenuItem jMenuComenzar;
    private javax.swing.JMenu jMenuEsquema;
    private javax.swing.JMenuItem jMenuEsquemaAbrir;
    private javax.swing.JMenuItem jMenuEsquemaCerrar;
    private javax.swing.JMenuItem jMenuEsquemaExit;
    private javax.swing.JMenuItem jMenuEsquemaGuardar;
    private javax.swing.JMenuItem jMenuHV;
    private javax.swing.JMenu jMenuHelp;
    private javax.swing.JMenuItem jMenuHelpAbout;
    private javax.swing.JMenuItem jMenuHelpChar;
    private javax.swing.JMenuItem jMenuHijo;
    private javax.swing.JMenuItem jMenuInsertar;
    private javax.swing.JMenu jMenuListados;
    private javax.swing.JMenuItem jMenuMantCompactar;
    private javax.swing.JMenuItem jMenuMantCreaInd;
    private javax.swing.JMenuItem jMenuMantDestInd;
    private javax.swing.JMenuItem jMenuMantImportar;
    private javax.swing.JMenuItem jMenuMantReorgInd;
    private javax.swing.JMenuItem jMenuMantReorganizar;
    private javax.swing.JMenu jMenuMantenimiento;
    private javax.swing.JMenuItem jMenuNuevo;
    private javax.swing.JMenuItem jMenuPV;
    private javax.swing.JMenuItem jMenuPadre;
    private javax.swing.JMenu jMenuRegistro;
    private javax.swing.JMenuItem jMenuSiguiente;
    private javax.swing.JMenu jMenuVinculo;
    private javax.swing.JPanel jPAccesos;
    private javax.swing.JPanel jPBotones1;
    private javax.swing.JPanel jPBotones2;
    private javax.swing.JPanel jPCampos;
    private javax.swing.JPopupMenu jPMListar;
    private javax.swing.JPanel jPanel;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTextField jTFNAccesos;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JToolBar jToolBar3;
    private javax.swing.JToolBar jToolBar4;
    private javax.swing.JToolBar jToolBar5;
    // End of variables declaration//GEN-END:variables
    

    private String [] lista(){
        String [] lista=new String[jTFs.length];
        for(int i=0;i<jTFs.length;i++)lista[i]=jTFs[i].getText();
        return lista;
    } 
    
    private void lista(String[] lista){        
        for(int i=0;i<jTFs.length;i++)jTFs[i].setText(lista[i]);        
    }
    
    private void refresca_buffer(BufferDeRegistro buf) {    
        buf.lista(lista());
    }
    
    private void refresca_ventana(BufferDeRegistro buf) {
        lista(buf.lista());        
        repaint();
    }
    
    private void abrirFichero(){  
        if(memoria!=null)memoria.resetContadorAccesos();
        dialogoExaminar dlg1 = new dialogoExaminar(this, "Abrir",
        "Abrir sistema de ficheros...");
        java.awt.Dimension dlgSize = dlg1.getPreferredSize();
        java.awt.Dimension frmSize = getSize();
        java.awt.Point loc = getLocation();
        dlg1.setLocation( (frmSize.width - dlgSize.width) / 2 + loc.x,
                     (frmSize.height - dlgSize.height) / 2 + loc.y);
        dlg1.setModal(true);
        dlg1.pack();        
        if (javax.swing.JFileChooser.APPROVE_OPTION == dlg1.jFileChooser1.showOpenDialog(this)) {            
            abrir(true);
                if(estructura!=null)act_combo(jCBArchivos, estructura.archivos());            
                act_allcombos(0);            
            if(principal!=null)jLStatusBar.setText(principal.abrir_sistema(dlg1.jFileChooser1.getSelectedFile().getPath()));                
            setVisible(true);
            repaint();                            
        }        
    }
    
    private void cerrarFichero(){ 
        if(memoria!=null)memoria.resetContadorAccesos();
        abrir(false);            
        setVisible(true);        
        repaint();        
        if(principal==null)return;        
        jLStatusBar.setText(principal.cerrar_sistema());    
    }
    
    private void abrir(boolean a){
        abierto=a;
        if(abierto){
            jBAbrirSGFF.setIcon(new javax.swing.ImageIcon("img\\closeFile.png"));
            jBAbrirSGFF.setToolTipText("Cerrar Sistema de Ficheros");
        }else{
            jBAbrirSGFF.setIcon(new javax.swing.ImageIcon("img\\openFile.png"));
            jBAbrirSGFF.setToolTipText("Abrir Sistema de Ficheros");
            for(int i=0;i<combos.length;i++)(combos[i]).removeAllItems();
        }        
        for(int i=1;i<botones.length;i++)(botones[i]).setEnabled(a);
        for(int i=0;i<combos.length;i++)(combos[i]).setEnabled(a);
        jMenuEsquemaAbrir.setEnabled(!a);
        //jMenuEsquemaCerrar.setEnabled(a);
        jMenuEsquemaGuardar.setEnabled(a);
        jMenuRegistro.setEnabled(a);
        jMenuBusq.setEnabled(a);
        jMenuMantenimiento.setEnabled(a);
    }
    
      void act_combo(javax.swing.JComboBox combi, String[] nom) {
          if(estructura==null)return;
    int n,i;
    n=nom.length;
    for (i = 0; i<n; i++) {
      combi.addItem(nom[i]);
    }
  }

  private void act_combo_ind(javax.swing.JComboBox combi, javax.swing.JButton boton, int[] ind) {
    if(estructura==null)return;
      int n,i;
    n=ind.length;
    if (n==0)
        { combi.setEnabled(false);
          boton.setEnabled(false);
        }
        else { combi.setEnabled(true);
               boton.setEnabled(true);
               for (i = 0; i < n; i++) {
                    combi.addItem(estructura.archivos()[ind[i]]);
               }
             }
  }
  
   private boolean contiene(int[] list, int elem) {
    int i, n;
    n = list.length;
    for (i = 0; i < n; i++) {
      if (list[i]==elem)
        return (true);
    }
    return (false);
  }

  private int identifica(String nome) {
    int i, n;
    n = estructura.archivos().length;
    for (i = 0; i < n; i++) {
      if (estructura.archivos()[i].equals(nome))
        return (i);
    }
    return (0);
  }

  private void act_allcombos(int arch) {
    if(estructura==null)return;
    int i,n;
    jCBArchivos.setSelectedIndex(arch);
    jCBHijos.removeAllItems();
    jCBHijos.addItem("<ninguno>");
    act_combo_ind(jCBHijos,jBIrAlHijo,estructura.hijos()[arch]);
    jCBHijosV.removeAllItems();
    jCBHijosV.addItem("<ninguno>");
    act_combo_ind(jCBHijosV,jBIrAlHV,estructura.hijos_virtuales()[arch]);
    jCBPadresV.removeAllItems();
    jCBPadresV.addItem("<ninguno>");
    n=estructura.archivos().length;
    jCBPadresV.setEnabled(false);
    jBIrAlHijo.setEnabled(false);
    jBIrAlPV.setEnabled(false);
    jBIrAlHV.setEnabled(false);
    for (i = 0; i<n; i++) {
      if ((i!=arch) && (contiene(estructura.hijos_virtuales()[i],arch))) {
          jCBPadresV.addItem(estructura.archivos()[i]);
          jCBPadresV.setEnabled(true);
      }
    }
    jBIrAlPadre.setEnabled(false);
    jMenuPadre.setEnabled(false);
    for (i = 0; i<n; i++) {
      if ((i!=arch) && (contiene(estructura.hijos()[i],arch)))
        {  jBIrAlPadre.setEnabled(true);
          jMenuPadre.setEnabled(true);
        }
    }
    archivo_actual = arch;
  }
  
  private void save_all() {
      if(memoria!=null)memoria.resetContadorAccesos();
    if(principal!=null)jLStatusBar.setText(principal.guardar_todo());
  }

  private void saliendo() {
      jLStatusBar.setText("Ejecutando cerrar_sistema...");
      if(memoria!=null)memoria.resetContadorAccesos();        
        if(principal!=null){            
            System.out.println(principal.cerrar_sistema());        
            System.out.println("N� Accesos: "+jTFNAccesos.getText());
        }     
    System.exit(0);
 }

  private void importa() {
      if(memoria!=null)memoria.resetContadorAccesos();
      for(int i=0;i<combos.length;i++)(combos[i]).removeAllItems();
      dialogoExaminar dlg1 = new dialogoExaminar(this, "Importar",
        "Importar registros del fichero original...");
        java.awt.Dimension dlgSize = dlg1.getPreferredSize();
        java.awt.Dimension frmSize = getSize();
        java.awt.Point loc = getLocation();
        dlg1.setLocation( (frmSize.width - dlgSize.width) / 2 + loc.x,
                     (frmSize.height - dlgSize.height) / 2 + loc.y);
        dlg1.setModal(true);
        dlg1.pack();
        
        if (javax.swing.JFileChooser.APPROVE_OPTION == dlg1.jFileChooser1.showOpenDialog(this)) {
            /*dialogoExaminar dlg2 = new dialogoExaminar(this, "Importar",
        "Importar registros del segundo fichero...");
            dlgSize = dlg2.getPreferredSize();
            frmSize = getSize();
            loc = getLocation();
            dlg2.setLocation( (frmSize.width - dlgSize.width) / 2 + loc.x,
                         (frmSize.height - dlgSize.height) / 2 + loc.y);
            dlg2.setModal(true);
            dlg1.pack();
            if (javax.swing.JFileChooser.APPROVE_OPTION == dlg2.jFileChooser1.showOpenDialog(this)) {
             */   
             abrir(true);
             
                if(estructura!=null)act_combo(jCBArchivos, estructura.archivos());
                act_allcombos(0);             
                if(principal!=null)jLStatusBar.setText(principal.importar(dlg1.jFileChooser1.getSelectedFile().getPath()));                
                setVisible(true);
                repaint();                /*
            }*/
                
        }
  }
  
  private void nuevaficha() {
    buf_in.limpiar();
    buf_out.limpiar();
    refresca_ventana(buf_out);
    jLStatusBar.setText("");
  }

  private void comienza_buscar() {
    refresca_buffer(buf_in);
    buf_out.limpiar();
    act_allcombos(jCBArchivos.getSelectedIndex());
    if(memoria!=null)memoria.resetContadorAccesos();
    if(principal!=null)jLStatusBar.setText(principal.buscar(jCBArchivos.getSelectedItem().toString(), buf_in, buf_out));
    refresca_ventana(buf_out);
    this.repaint();
  }

  private void haz_siguiente() {
    buf_out.limpiar();
    if(memoria!=null)memoria.resetContadorAccesos();
    if(principal!=null)jLStatusBar.setText(principal.siguiente(buf_out));
    refresca_ventana(buf_out);
    this.repaint();
  }

  private void haz_anterior() {
    buf_out.limpiar();
    if(memoria!=null)memoria.resetContadorAccesos();
    if(principal!=null)jLStatusBar.setText(principal.anterior(buf_out));
    refresca_ventana(buf_out);
    this.repaint();
  }

  private void haz_insercion() {
    act_allcombos(jCBArchivos.getSelectedIndex());
    refresca_buffer(buf_in);
    if(memoria!=null)memoria.resetContadorAccesos();
    if(principal!=null)jLStatusBar.setText(principal.insertar(jCBArchivos.getSelectedItem().toString(), buf_in));
  }

  private void haz_borrado() {
    act_allcombos(jCBArchivos.getSelectedIndex());
    refresca_buffer(buf_in);
    if(memoria!=null)memoria.resetContadorAccesos();
    if(principal!=null)jLStatusBar.setText(principal.borrar(jCBArchivos.getSelectedItem().toString(), buf_in));
  }

  private void haz_actualizacion() {
    act_allcombos(jCBArchivos.getSelectedIndex());
    buf_out.lista(buf_in.lista());
    refresca_buffer(buf_in);
    if(memoria!=null)memoria.resetContadorAccesos();
    if(principal!=null)jLStatusBar.setText(principal.actualizar(jCBArchivos.getSelectedItem().toString(), buf_out, buf_in));    
  }
  
  private void buscaRP() {      
   int n=0;
   int i;
   buf_out.limpiar();
   if(estructura!=null)n=estructura.archivos().length;
   for (i = 0; i<n; i++) {
     if ((i!=archivo_actual) && (contiene(estructura.hijos()[i],archivo_actual)))
      act_allcombos(i);
   }
   if(memoria!=null)memoria.resetContadorAccesos();
   if(principal!=null)jLStatusBar.setText(principal.ir_a_padre(buf_out));
   refresca_ventana(buf_out);
   this.repaint();
  }

  private void actualizaMenusA(String archi) {
    jMenuInsertar.setText("Insertar en "+archi);
    jMenuBorrar.setText("Borrar de "+archi);
    jMenuActualizar.setText("Actualizar registros de "+archi);
    jMenuComenzar.setText("Comenzar b�squeda sobre "+archi);
  }

  private void actualizaMenusRH(String arch) {
    if (arch.equals("<ninguno>"))
    { jMenuHijo.setEnabled(false);
      jMenuHijo.setText("Primer hijo");
      jBIrAlHijo.setEnabled(false);
    }
    else { jMenuHijo.setText("Primer hijo en "+arch);
           jMenuHijo.setEnabled(true);
           jBIrAlHijo.setEnabled(true);
    }
  }

  private void actualizaMenusPV(String arch) {
    if (arch.equals("<ninguno>"))
    { jMenuPV.setEnabled(false);
      jMenuPV.setText("Padre virtual");
      jBIrAlPV.setEnabled(false);
    }
    else { jMenuPV.setText("Padre virtual en "+arch);
           jMenuPV.setEnabled(true);
           jBIrAlPV.setEnabled(true);
    }
  }
  private void actualizaMenusHV(String arch) {
    if (arch.equals("<ninguno>"))
    { jMenuHV.setEnabled(false);
      jMenuHV.setText("Primer hijo virtual");
      jBIrAlHV.setEnabled(false);
    }
    else { jMenuHV.setText("Primer hijo virtual en "+arch);
           jMenuHV.setEnabled(true);
           jBIrAlHV.setEnabled(true);
    }
  }

  private void buscaRH() {
      if(estructura==null)return;
   String archi= new String(jCBHijos.getSelectedItem().toString());
   buf_out.limpiar();
   act_allcombos(identifica(archi));
   if(memoria!=null)memoria.resetContadorAccesos();
   if(principal!=null)jLStatusBar.setText(principal.ir_a_hijo(archi,buf_out));
   refresca_ventana(buf_out);
   this.repaint();
  }

  private void buscaPV() {
      if(estructura==null)return;
   String archi= new String(jCBPadresV.getSelectedItem().toString());
   buf_out.limpiar();
   act_allcombos(identifica(archi));
   if(memoria!=null)memoria.resetContadorAccesos();
   if(principal!=null)jLStatusBar.setText(principal.ir_a_padre_virtual(archi,buf_out));
   refresca_ventana(buf_out);
   this.repaint();
  }

  private void buscaHV() {
      if(estructura==null)return;
   String archi= new String(jCBHijosV.getSelectedItem().toString());
   buf_out.limpiar();
   act_allcombos(identifica(archi));
   if(memoria!=null)memoria.resetContadorAccesos();
   if(principal!=null)jLStatusBar.setText(principal.ir_a_hijo_virtual(archi,buf_out));
   refresca_ventana(buf_out);
   this.repaint();
  }


  private void reorganiza() {
   dialogoMantenimiento dialg = new dialogoMantenimiento(this);
   java.awt.Dimension dlgSize = dialg.getPreferredSize();
   java.awt.Dimension frmSize = getSize();
   java.awt.Point loc = getLocation();
   dialg.setLocation((frmSize.width - dlgSize.width) / 2 + loc.x, (frmSize.height - dlgSize.height) / 2 + loc.y);
   dialg.setModal(true);
   dialg.setTitle("Reorganizar �rea de Datos");
   dialg.mantlabel1.setText("Nombre del �rea de datos  ");
   dialg.mantlabel2.setText("Nuevo tama�o del �rea de datos  ");
   dialg.pack();
   dialg.show();
   refresca_buffer(buf_in);
   buf_out.limpiar();
   if (dialg.button2.getActionCommand() == "OK!"){
       if(memoria!=null)memoria.resetContadorAccesos();
      if(principal!=null)jLStatusBar.setText(principal.reorganizar(dialg.mantfield1.getText(),dialg.mantfield2.getText(),buf_in));
      else jLStatusBar.setText("Operaci�n cancelada");
   }
   refresca_ventana(buf_out);
   this.repaint();
  }

  private void crea_ind() {
    dialogoMantenimiento dialg = new dialogoMantenimiento(this);
    java.awt.Dimension dlgSize = dialg.getPreferredSize();
    java.awt.Dimension frmSize = getSize();
    java.awt.Point loc = getLocation();
    dialg.setLocation((frmSize.width - dlgSize.width) / 2 + loc.x, (frmSize.height - dlgSize.height) / 2 + loc.y);
    dialg.setModal(true);
    dialg.setTitle("Crear �ndice");
    dialg.mantlabel1.setText("Clave de Indizaci�n  ");
    dialg.mantlabel2.setText("Tipo de �ndice  ");
    dialg.pack();
    dialg.show();
    refresca_buffer(buf_in);
    buf_out.limpiar();
    if (dialg.button2.getActionCommand() == "OK!"){
        if(memoria!=null)memoria.resetContadorAccesos();
       if(principal!=null)jLStatusBar.setText(principal.crear_indice(dialg.mantfield1.getText(),dialg.mantfield2.getText(),buf_in));
       else jLStatusBar.setText("Operaci�n cancelada");
    }
    refresca_ventana(buf_out);
    this.repaint();
  }

  private void dest_ind() {
    dialogoMantenimiento dialg = new dialogoMantenimiento(this);
  java.awt.Dimension dlgSize = dialg.getPreferredSize();
  java.awt.Dimension frmSize = getSize();
  java.awt.Point loc = getLocation();
  dialg.setLocation((frmSize.width - dlgSize.width) / 2 + loc.x, (frmSize.height - dlgSize.height) / 2 + loc.y);
  dialg.setModal(true);
  dialg.setTitle("Destruir �ndice");
  dialg.mantlabel1.setText("Clave de Indizaci�n  ");
  dialg.mantlabel2.setVisible(false);
  dialg.mantfield2.setVisible(false);
  dialg.pack();
  dialg.show();
  refresca_buffer(buf_in);
  buf_out.limpiar();
  if (dialg.button2.getActionCommand() == "OK!"){
      if(memoria!=null)memoria.resetContadorAccesos();
     if(principal!=null)jLStatusBar.setText(principal.destruir_indice(dialg.mantfield1.getText(),buf_in));
     else jLStatusBar.setText("Operaci�n cancelada");
  }
  refresca_ventana(buf_out);
  this.repaint();
  }
  
  private void reorg_ind() {
    dialogoMantenimiento dialg = new dialogoMantenimiento(this);
      java.awt.Dimension dlgSize = dialg.getPreferredSize();
      java.awt.Dimension frmSize = getSize();
      java.awt.Point loc = getLocation();
      dialg.setLocation((frmSize.width - dlgSize.width) / 2 + loc.x, (frmSize.height - dlgSize.height) / 2 + loc.y);
      dialg.setModal(true);
      dialg.setTitle("Reorganizar �ndice");
      dialg.mantlabel1.setText("Clave de Indizaci�n  ");
      dialg.mantlabel2.setVisible(false);
      dialg.mantfield2.setVisible(false);
      dialg.pack();
      dialg.show();
      refresca_buffer(buf_in);
      buf_out.limpiar();
      if (dialg.button2.getActionCommand() == "OK!"){
          if(memoria!=null)memoria.resetContadorAccesos();
         if(principal!=null)jLStatusBar.setText(principal.reorganizar_indice(dialg.mantfield1.getText(),buf_in));
         else jLStatusBar.setText("Operaci�n cancelada");
      }
      refresca_ventana(buf_out);
      this.repaint();
      }


  private void busq_compleja() {
    dialogoBqAvanzada dialg = new dialogoBqAvanzada(this);
    java.awt.Dimension dlgSize = dialg.getPreferredSize();
    java.awt.Dimension frmSize = getSize();
    java.awt.Point loc = getLocation();
    dialg.setLocation((frmSize.width - dlgSize.width) / 2 + loc.x, (frmSize.height - dlgSize.height) / 2 + loc.y);
    dialg.setModal(true);
    dialg.pack();
    dialg.show();
    refresca_buffer(buf_in);
    buf_out.limpiar();
    if (dialg.button2.getActionCommand() == "OK!"){
        if(memoria!=null)memoria.resetContadorAccesos();
       if(principal!=null)jLStatusBar.setText(principal.busqueda_avanzada(dialg.jTextArea1.getText(),buf_in, buf_out));
       else jLStatusBar.setText("Operaci�n cancelada");
    }
    refresca_ventana(buf_out);
    this.repaint();
  }  
  
  private void listado(int tipo){     
      jPMListar.setVisible(false);
      Vector<String> lista=new Vector<String>();
      int n_resultados=0;
      if(memoria!=null)memoria.resetContadorAccesos();
      if(principal!=null)n_resultados=principal.listar(tipo,lista);                
      jLStatusBar.setText("Terminado m�todo listado con retorno "+n_resultados+" y "+lista.size()+" entradas devueltas.");
      ListadosVentana dialog=new ListadosVentana(tipo,n_resultados, lista.toArray(new String[]{}),this, true);
      dialog.pack();
      dialog.show();
  }
  
  private void acc_invertido(){
        refresca_buffer(buf_in);
        buf_out.limpiar(); 
        Vector<String> lista=new Vector<String>();
        int n_resultados=0;
        if(memoria!=null)memoria.resetContadorAccesos();
        if(principal!=null)n_resultados=principal.acceso_invertido(buf_in, lista);               
        jLStatusBar.setText("Terminado m�todo acceso_invertido con retorno "+n_resultados+" y "+lista.size()+" entradas devueltas.");
        ListadosVentana dialog=dialog=new ListadosVentana(-1, n_resultados, lista.toArray(new String[]{}),this, true);
        dialog.pack();
        dialog.show();
        
  }
  
  private void compactar(){
        refresca_buffer(buf_in);
        buf_out.limpiar(); 
        if(memoria!=null)memoria.resetContadorAccesos();
        if(principal!=null)jLStatusBar.setText(principal.compactar(jCBArchivos.getSelectedItem().toString()));
  }
  
  private void encender_popup_de_listado(){
    java.awt.Point loc = getLocation();
    java.awt.Dimension frmSize = getSize();
    jPMListar.setLocation(12 * (frmSize.width) / 20 + loc.x, (frmSize.height) / 10 + loc.y);
    jPMListar.setVisible(true);
  }
  
  private void apagar_popup_de_listado(){
      jPMListar.setVisible(false);
  }
  
  void actualizar_accesos(int n){
    jTFNAccesos.setText((new Integer(n)).toString());
  }
  
  void cargar_campos(){
    String [] titulos = BufferDeRegistro.titulos;
    int [] longitudes= BufferDeRegistro.longitudes;
    int [] filas= BufferDeRegistro.filas;
    int apartado=0;
    javax.swing.JPanel panel = new javax.swing.JPanel();
    panel.setMinimumSize(new java.awt.Dimension(850, 150));
    for(int i=0;i<titulos.length;i++){
        if(BufferDeRegistro.comienzo_apartados[apartado]==i){
            if(apartado!=0)jPCampos.add(panel);
            panel = new javax.swing.JPanel();
            panel.setMinimumSize(new java.awt.Dimension(850, 150));
            panel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(BufferDeRegistro.nombre_apartados[apartado])));
            if(apartado<(BufferDeRegistro.comienzo_apartados.length-1))apartado++;            
        }
        cargar_campo(titulos[i],longitudes[i],filas[i],panel, i);
    }
    jPCampos.add(panel);
  }
  
  void cargar_campo(String titulo, int longitud, int filas, javax.swing.JPanel panel, int i){
    // Declaraci�n de un panel, una etiqueta y un campo de texto
    javax.swing.JPanel jPCampoi = new javax.swing.JPanel();
    javax.swing.JLabel jLCampoi = new javax.swing.JLabel();    
    javax.swing.JScrollPane jSPTextoi = new javax.swing.JScrollPane();
    javax.swing.JTextArea jTATextoi = new javax.swing.JTextArea();
    
    //Configuraci�n
    //jPCampoi.setMaximumSize(new java.awt.Dimension(600, 200));
    
    jLCampoi.setText(titulo);
    
    jTATextoi.setColumns(longitud);
    jTATextoi.setRows(filas);
    jSPTextoi.setViewportView(jTATextoi);    

    jPCampoi.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 2, 2));
    
    //A�adir etiqueta y campo de texto al panel del campo
    jPCampoi.add(jLCampoi);
    jPCampoi.add(jSPTextoi);

    //A�adir panel del campo al panel
    panel.add(jPCampoi);
    
    //A�adir campo de texto a la lista de campos de texto
    
    jTFs[i]=jTATextoi;
  }
  
  void cargar_menu_listados(){
    String [] nombres_catalogos = BufferDeRegistro.nombre_catalogos;
    for(int i=0;i<nombres_catalogos.length;i++)cargar_menus_listado(nombres_catalogos[i],i);
  }
  
  void cargar_menus_listado(String nombre_catalogo, int i){
      final int ii=i;
      javax.swing.JMenuItem jMenuListadoi = new javax.swing.JMenuItem();
    javax.swing.JMenuItem jMenuPopupListadoi=new javax.swing.JMenuItem();;

jMenuListadoi.setText(nombre_catalogo);
        jMenuListadoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuPopupListadoiActionPerformed(evt,ii);
            }
        });

        jMenuListados.add(jMenuListadoi);

jMenuPopupListadoi.setText(nombre_catalogo);
jMenuPopupListadoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuPopupListadoiActionPerformed(evt,ii);
            }
        });
        jMenuPopupListadoi.addMenuDragMouseListener(new javax.swing.event.MenuDragMouseListener() {
            public void menuDragMouseDragged(javax.swing.event.MenuDragMouseEvent evt) {
            }
            public void menuDragMouseEntered(javax.swing.event.MenuDragMouseEvent evt) {
            }
            public void menuDragMouseExited(javax.swing.event.MenuDragMouseEvent evt) {
                jMenuPopupListadoiMenuDragMouseExited(evt,ii);
            }
            public void menuDragMouseReleased(javax.swing.event.MenuDragMouseEvent evt) {
            }
        });

        jPMListar.add(jMenuPopupListadoi);

  }
}
