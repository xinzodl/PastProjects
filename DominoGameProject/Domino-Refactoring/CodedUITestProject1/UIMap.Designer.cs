// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject1
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// InicioDomino
        /// </summary>
        public void InicioDomino()
        {
            #region Variable Declarations
            WinWindow uIReleaseWindow = this.UIReleaseWindow;
            WinEdit uINombreEdit = this.UIReleaseWindow.UIItemWindow.UIDominoClienteListItem.UINombreEdit;
            #endregion

            // Click 'Release' window
            Mouse.Click(uIReleaseWindow, new Point(320, 7));

            // Double-Click 'Nombre' text box
            Mouse.DoubleClick(uINombreEdit, new Point(23, 7));
        }
        
        /// <summary>
        /// SentarJugador1 - Use 'SentarJugador1Params' to pass parameters into this method.
        /// </summary>
        public void SentarJugador1()
        {
            #region Variable Declarations
            WinEdit uITxtBoxPlayerNameEdit = this.UIDominóWindow.UITxtBoxPlayerNameWindow.UITxtBoxPlayerNameEdit;
            WinButton uISentarseButton = this.UIDominóWindow.UISentarseWindow.UISentarseButton;
            #endregion

            // Type 'Jessica' in 'txtBoxPlayerName' text box
            uITxtBoxPlayerNameEdit.Text = this.SentarJugador1Params.UITxtBoxPlayerNameEditText;

            // Click 'Sentarse' button
            Mouse.Click(uISentarseButton, new Point(34, 14));
        }
        
        /// <summary>
        /// SentarJugador2 - Use 'SentarJugador2Params' to pass parameters into this method.
        /// </summary>
        public void SentarJugador2()
        {
            #region Variable Declarations
            WinEdit uITxtBoxPlayerNameEdit = this.UIDominóWindow1.UITxtBoxPlayerNameWindow.UITxtBoxPlayerNameEdit;
            WinButton uISentarseButton = this.UIDominóWindow1.UISentarseWindow.UISentarseButton;
            #endregion

            // Type 'Marcos' in 'txtBoxPlayerName' text box
            uITxtBoxPlayerNameEdit.Text = this.SentarJugador2Params.UITxtBoxPlayerNameEditText;

            // Click 'Sentarse' button
            Mouse.Click(uISentarseButton, new Point(37, 16));
        }
        
        /// <summary>
        /// SentarJugador3 - Use 'SentarJugador3Params' to pass parameters into this method.
        /// </summary>
        public void SentarJugador3()
        {
            #region Variable Declarations
            WinEdit uINombreEdit = this.UIReleaseWindow.UIItemWindow.UIDominoClienteListItem.UINombreEdit;
            WinEdit uITxtBoxPlayerNameEdit = this.UIDominóWindow2.UITxtBoxPlayerNameWindow.UITxtBoxPlayerNameEdit;
            WinButton uISentarseButton = this.UIDominóWindow2.UISentarseWindow.UISentarseButton;
            #endregion

            // Double-Click 'Nombre' text box
            Mouse.DoubleClick(uINombreEdit, new Point(32, 14));

            // Type 'Laura' in 'txtBoxPlayerName' text box
            uITxtBoxPlayerNameEdit.Text = this.SentarJugador3Params.UITxtBoxPlayerNameEditText;

            // Click 'Sentarse' button
            Mouse.Click(uISentarseButton, new Point(41, 22));
        }
        
        /// <summary>
        /// SentarJugador4 - Use 'SentarJugador4Params' to pass parameters into this method.
        /// </summary>
        public void SentarJugador4()
        {
            #region Variable Declarations
            WinEdit uINombreEdit = this.UIReleaseWindow.UIItemWindow.UIDominoClienteListItem.UINombreEdit;
            WinEdit uITxtBoxPlayerNameEdit = this.UIDominóWindow3.UITxtBoxPlayerNameWindow.UITxtBoxPlayerNameEdit;
            WinButton uISentarseButton = this.UIDominóWindow3.UISentarseWindow.UISentarseButton;
            #endregion

            // Double-Click 'Nombre' text box
            Mouse.DoubleClick(uINombreEdit, new Point(40, 10));

            // Type 'Ismael' in 'txtBoxPlayerName' text box
            uITxtBoxPlayerNameEdit.Text = this.SentarJugador4Params.UITxtBoxPlayerNameEditText;

            // Click 'Sentarse' button
            Mouse.Click(uISentarseButton, new Point(51, 13));
        }
        
        /// <summary>
        /// SentarJugador5 - Use 'SentarJugador5Params' to pass parameters into this method.
        /// </summary>
        public void SentarJugador5()
        {
            #region Variable Declarations
            WinEdit uINombreEdit = this.UIReleaseWindow.UIItemWindow.UIDominoClienteListItem.UINombreEdit;
            WinEdit uITxtBoxPlayerNameEdit = this.UIDominóWindow4.UITxtBoxPlayerNameWindow.UITxtBoxPlayerNameEdit;
            WinButton uISentarseButton = this.UIDominóWindow4.UISentarseWindow.UISentarseButton;
            WinButton uIAceptarButton = this.UIAceptarWindow.UIAceptarButton;
            #endregion

            // Double-Click 'Nombre' text box
            Mouse.DoubleClick(uINombreEdit, new Point(7, 8));

            // Type 'Esther' in 'txtBoxPlayerName' text box
            uITxtBoxPlayerNameEdit.Text = this.SentarJugador5Params.UITxtBoxPlayerNameEditText;

            // Click 'Sentarse' button
            Mouse.Click(uISentarseButton, new Point(42, 19));

            // Click 'Aceptar' button
            Mouse.Click(uIAceptarButton, new Point(73, 15));
        }
        
        /// <summary>
        /// SentarJugadorNombreRepetido - Use 'SentarJugadorNombreRepetidoParams' to pass parameters into this method.
        /// </summary>
        public void SentarJugadorNombreRepetido()
        {
            #region Variable Declarations
            WinEdit uITxtBoxPlayerNameEdit = this.UIDominóWindow1.UITxtBoxPlayerNameWindow.UITxtBoxPlayerNameEdit;
            WinButton uISentarseButton = this.UIDominóWindow1.UISentarseWindow.UISentarseButton;
            WinButton uIAceptarButton = this.UIAceptarWindow.UIAceptarButton;
            #endregion

            // Type 'Laura' in 'txtBoxPlayerName' text box
            uITxtBoxPlayerNameEdit.Text = this.SentarJugadorNombreRepetidoParams.UITxtBoxPlayerNameEditText;

            // Click 'Sentarse' button
            Mouse.Click(uISentarseButton, new Point(18, 17));

            // Click 'Aceptar' button
            Mouse.Click(uIAceptarButton, new Point(57, 14));
        }
        
        /// <summary>
        /// SentarJugadorOK - Use 'SentarJugadorOKParams' to pass parameters into this method.
        /// </summary>
        public void SentarJugadorOK()
        {
            #region Variable Declarations
            WinEdit uINombreEdit = this.UIReleaseWindow.UIItemWindow.UIDominoClienteListItem.UINombreEdit;
            WinTitleBar uIReleaseTitleBar = this.UIReleaseWindow.UIReleaseTitleBar;
            WinEdit uITxtBoxPlayerNameEdit = this.UIDominóWindow.UITxtBoxPlayerNameWindow.UITxtBoxPlayerNameEdit;
            WinButton uISentarseButton = this.UIDominóWindow.UISentarseWindow.UISentarseButton;
            #endregion

            // Double-Click 'Nombre' text box
            Mouse.DoubleClick(uINombreEdit, new Point(27, 9));

            // Click 'Release' title bar
            Mouse.Click(uIReleaseTitleBar, new Point(440, 14));

            // Double-Click 'Nombre' text box
            Mouse.DoubleClick(uINombreEdit, new Point(33, 13));

            // Type 'Luis' in 'txtBoxPlayerName' text box
            uITxtBoxPlayerNameEdit.Text = this.SentarJugadorOKParams.UITxtBoxPlayerNameEditText;

            // Click 'Sentarse' button
            Mouse.Click(uISentarseButton, new Point(17, 11));
        }
        
        /// <summary>
        /// SentarJugadorVacio
        /// </summary>
        public void SentarJugadorVacio()
        {
            #region Variable Declarations
            WinEdit uINombreEdit = this.UIReleaseWindow.UIItemWindow.UIDominoClienteListItem.UINombreEdit;
            WinEdit uITxtBoxPlayerNameEdit = this.UIDominóWindow.UITxtBoxPlayerNameWindow.UITxtBoxPlayerNameEdit;
            WinButton uISentarseButton = this.UIDominóWindow.UISentarseWindow.UISentarseButton;
            WinButton uIAceptarButton = this.UIAceptarWindow.UIAceptarButton;
            #endregion

            // Double-Click 'Nombre' text box
            Mouse.DoubleClick(uINombreEdit, new Point(3, 14));

            // Click 'txtBoxPlayerName' text box
            Mouse.Click(uITxtBoxPlayerNameEdit, new Point(112, 5));

            // Click 'Sentarse' button
            Mouse.Click(uISentarseButton, new Point(44, 14));

            // Click 'Aceptar' button
            Mouse.Click(uIAceptarButton, new Point(57, 5));
        }
        
        /// <summary>
        /// meeesaaaaLlena - Use 'meeesaaaaLlenaParams' to pass parameters into this method.
        /// </summary>
        public void meeesaaaaLlena()
        {
            #region Variable Declarations
            WinEdit uITxtBoxPlayerNameEdit = this.UIDominóWindow.UITxtBoxPlayerNameWindow.UITxtBoxPlayerNameEdit;
            WinButton uISentarseButton = this.UIDominóWindow.UISentarseWindow.UISentarseButton;
            WinButton uIAceptarButton = this.UIAceptarWindow.UIAceptarButton;
            #endregion

            // Type 'Fran' in 'txtBoxPlayerName' text box
            uITxtBoxPlayerNameEdit.Text = this.meeesaaaaLlenaParams.UITxtBoxPlayerNameEditText;

            // Click 'Sentarse' button
            Mouse.Click(uISentarseButton, new Point(69, 19));

            // Click 'Aceptar' button
            Mouse.Click(uIAceptarButton, new Point(41, 10));
        }
        
        /// <summary>
        /// IniciarNuevoDomino
        /// </summary>
        public void IniciarNuevoDomino()
        {
            #region Variable Declarations
            WinControl uIItemImage = this.UIDebugWindow.UIItemWindow.UIDominoClienteexeListItem.UIItemImage;
            #endregion

            // Double-Click image
            Mouse.DoubleClick(uIItemImage, new Point(12, 8));
        }
        
        /// <summary>
        /// SentarMarcos1 - Use 'SentarMarcos1Params' to pass parameters into this method.
        /// </summary>
        public void SentarMarcos1()
        {
            #region Variable Declarations
            WinEdit uITxtBoxPlayerNameEdit = this.UIDominóWindow.UITxtBoxPlayerNameWindow.UITxtBoxPlayerNameEdit;
            WinButton uISentarseButton = this.UIDominóWindow.UISentarseWindow.UISentarseButton;
            #endregion

            // Type 'marcos' in 'txtBoxPlayerName' text box
            uITxtBoxPlayerNameEdit.Text = this.SentarMarcos1Params.UITxtBoxPlayerNameEditText;

            // Click 'Sentarse' button
            Mouse.Click(uISentarseButton, new Point(30, 13));
        }
        
        /// <summary>
        /// AssertNombre1 - Use 'AssertNombre1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertNombre1()
        {
            #region Variable Declarations
            WinEdit uITxtBoxPlayerNameEdit = this.UIDominóWindow.UITxtBoxPlayerNameWindow.UITxtBoxPlayerNameEdit;
            #endregion

            // Verify that the 'ControlType' property of 'txtBoxPlayerName' text box is not equal to ''
            Assert.AreNotEqual(this.AssertNombre1ExpectedValues.UITxtBoxPlayerNameEditControlType, uITxtBoxPlayerNameEdit.ControlType.ToString(), "Nombre no vacio¡¡");
        }
        
        /// <summary>
        /// InicioDomino2 - Use 'InicioDomino2Params' to pass parameters into this method.
        /// </summary>
        public void InicioDomino2()
        {
            #region Variable Declarations
            WinTitleBar uIDebugTitleBar = this.UIDebugWindow.UIDebugTitleBar;
            WinControl uIItemImage = this.UIDebugWindow.UIItemWindow.UIDominoClienteexeListItem.UIItemImage;
            WinEdit uITxtBoxPlayerNameEdit = this.UIDominóWindow1.UITxtBoxPlayerNameWindow.UITxtBoxPlayerNameEdit;
            #endregion

            // Click 'Debug' title bar
            Mouse.Click(uIDebugTitleBar, new Point(609, 10));

            // Double-Click image
            Mouse.DoubleClick(uIItemImage, new Point(11, 7));

            // Type 'jessi' in 'txtBoxPlayerName' text box
            uITxtBoxPlayerNameEdit.Text = this.InicioDomino2Params.UITxtBoxPlayerNameEditText;

            // Type '' in 'txtBoxPlayerName' text box
            uITxtBoxPlayerNameEdit.Text = this.InicioDomino2Params.UITxtBoxPlayerNameEditText1;
        }
        
        /// <summary>
        /// SentarJessi2 - Use 'SentarJessi2Params' to pass parameters into this method.
        /// </summary>
        public void SentarJessi2()
        {
            #region Variable Declarations
            WinEdit uITxtBoxPlayerNameEdit = this.UIDominóWindow1.UITxtBoxPlayerNameWindow.UITxtBoxPlayerNameEdit;
            WinButton uISentarseButton = this.UIDominóWindow1.UISentarseWindow.UISentarseButton;
            #endregion

            // Type 'jessi' in 'txtBoxPlayerName' text box
            uITxtBoxPlayerNameEdit.Text = this.SentarJessi2Params.UITxtBoxPlayerNameEditText;

            // Type '{Tab}' in 'txtBoxPlayerName' text box
            Keyboard.SendKeys(uITxtBoxPlayerNameEdit, this.SentarJessi2Params.UITxtBoxPlayerNameEditSendKeys, ModifierKeys.None);

            // Type '{Enter}' in 'Sentarse' button
            Keyboard.SendKeys(uISentarseButton, this.SentarJessi2Params.UISentarseButtonSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// InicioDomino3
        /// </summary>
        public void InicioDomino3()
        {
            #region Variable Declarations
            WinTitleBar uIDebugTitleBar = this.UIDebugWindow.UIDebugTitleBar;
            WinControl uIItemImage = this.UIDebugWindow.UIItemWindow.UIDominoClienteexeListItem.UIItemImage;
            #endregion

            // Click 'Debug' title bar
            Mouse.Click(uIDebugTitleBar, new Point(575, 7));

            // Double-Click image
            Mouse.DoubleClick(uIItemImage, new Point(14, 9));
        }
        
        /// <summary>
        /// SentarPepe3 - Use 'SentarPepe3Params' to pass parameters into this method.
        /// </summary>
        public void SentarPepe3()
        {
            #region Variable Declarations
            WinEdit uITxtBoxPlayerNameEdit = this.UIDominóWindow2.UITxtBoxPlayerNameWindow.UITxtBoxPlayerNameEdit;
            WinButton uISentarseButton = this.UIDominóWindow2.UISentarseWindow.UISentarseButton;
            #endregion

            // Type 'pepe' in 'txtBoxPlayerName' text box
            uITxtBoxPlayerNameEdit.Text = this.SentarPepe3Params.UITxtBoxPlayerNameEditText;

            // Click 'Sentarse' button
            Mouse.Click(uISentarseButton, new Point(30, 16));
        }
        
        /// <summary>
        /// AssertNombre3 - Use 'AssertNombre3ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertNombre3()
        {
            #region Variable Declarations
            WinEdit uITxtBoxPlayerNameEdit = this.UIDominóWindow2.UITxtBoxPlayerNameWindow.UITxtBoxPlayerNameEdit;
            #endregion

            // Verify that the 'ControlType' property of 'txtBoxPlayerName' text box is not equal to ''
            Assert.AreNotEqual(this.AssertNombre3ExpectedValues.UITxtBoxPlayerNameEditControlType, uITxtBoxPlayerNameEdit.ControlType.ToString());
        }
        
        /// <summary>
        /// InicioDomino4
        /// </summary>
        public void InicioDomino4()
        {
            #region Variable Declarations
            WinCustom uIPaneldevistapreviaCustom = this.UIDebugWindow.UIPaneldelexploradorPane.UIPaneldevistapreviaCustom;
            WinEdit uINombreEdit = this.UIDebugWindow.UIItemWindow.UIDominoClienteexeListItem.UINombreEdit;
            #endregion

            // Click 'Panel de vista previa' custom control
            Mouse.Click(uIPaneldevistapreviaCustom, new Point(114, 123));

            // Double-Click 'Nombre' text box
            Mouse.DoubleClick(uINombreEdit, new Point(1, 8));
        }
        
        /// <summary>
        /// AssertNombre4 - Use 'AssertNombre4ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertNombre4()
        {
            #region Variable Declarations
            WinWindow uITxtBoxPlayerNameWindow = this.UIDominóWindow3.UINuevojugadorGroup.UITxtBoxPlayerNameWindow;
            #endregion

            // Verify that the 'AccessibleName' property of 'txtBoxPlayerName' window is not equal to ''
           // Assert.AreNotEqual(this.AssertNombre4ExpectedValues.UITxtBoxPlayerNameWindowAccessibleName, uITxtBoxPlayerNameWindow.AccessibleName);
        }
        
        /// <summary>
        /// Cerrar4
        /// </summary>
        public void Cerrar4()
        {
            #region Variable Declarations
            WinButton uICerrarButton = this.UIDominóWindow3.UIDominóTitleBar.UICerrarButton;
            #endregion

            // Click 'Cerrar' button
            Mouse.Click(uICerrarButton, new Point(11, 12));
        }
        
        /// <summary>
        /// Cerrar3
        /// </summary>
        public void Cerrar3()
        {
            #region Variable Declarations
            WinButton uICerrarButton = this.UIDominóWindow2.UIDominóTitleBar.UICerrarButton;
            #endregion

            // Click 'Cerrar' button
            Mouse.Click(uICerrarButton, new Point(26, 17));
        }
        
        /// <summary>
        /// Cerrar2
        /// </summary>
        public void Cerrar2()
        {
            #region Variable Declarations
            WinButton uICerrarButton = this.UIDominóWindow1.UIDominóTitleBar.UICerrarButton;
            #endregion

            // Click 'Cerrar' button
            Mouse.Click(uICerrarButton, new Point(16, 13));
        }
        
        /// <summary>
        /// Cerrar1
        /// </summary>
        public void Cerrar1()
        {
            #region Variable Declarations
            WinButton uICerrarButton = this.UIDominóWindow.UIDominóTitleBar.UICerrarButton;
            #endregion

            // Click 'Cerrar' button
            Mouse.Click(uICerrarButton, new Point(24, 13));
        }
        
        /// <summary>
        /// PruebaMesaDomino1
        /// </summary>
        public void PruebaMesaDomino1()
        {
            #region Variable Declarations
            WinControl uIItemImage = this.UIDebugWindow.UIItemWindow.UIDominoClienteexeListItem.UIItemImage;
            #endregion

            // Double-Click image
            Mouse.DoubleClick(uIItemImage, new Point(14, 11));
        }
        
        /// <summary>
        /// PruebaSentarJugador1 - Use 'PruebaSentarJugador1Params' to pass parameters into this method.
        /// </summary>
        public void PruebaSentarJugador1()
        {
            #region Variable Declarations
            WinEdit uITxtBoxPlayerNameEdit = this.UIDominóWindow.UITxtBoxPlayerNameWindow.UITxtBoxPlayerNameEdit;
            WinButton uISentarseButton = this.UIDominóWindow.UISentarseWindow.UISentarseButton;
            #endregion

            // Type 'marcos' in 'txtBoxPlayerName' text box
            uITxtBoxPlayerNameEdit.Text = this.PruebaSentarJugador1Params.UITxtBoxPlayerNameEditText;

            // Click 'Sentarse' button
            Mouse.Click(uISentarseButton, new Point(29, 18));
        }
        
        /// <summary>
        /// PruebaAssertJugador1 - Use 'PruebaAssertJugador1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void PruebaAssertJugador1()
        {
            #region Variable Declarations
            WinGroup uIMarcosGroup = this.UIDominóWindow.UIMarcosWindow.UIMarcosGroup;
            #endregion

            // Verify that the 'Name' property of 'marcos' group equals 'marcos'
            Assert.AreEqual(this.PruebaAssertJugador1ExpectedValues.UIMarcosGroupName, uIMarcosGroup.Name);
        }
        
        /// <summary>
        /// PruebaMesaDomino2
        /// </summary>
        public void PruebaMesaDomino2()
        {
            #region Variable Declarations
            WinCustom uIPaneldevistapreviaCustom = this.UIDebugWindow.UIPaneldelexploradorPane.UIPaneldevistapreviaCustom;
            WinEdit uINombreEdit = this.UIDebugWindow.UIItemWindow.UIDominoClienteexeListItem.UINombreEdit;
            #endregion

            // Click 'Panel de vista previa' custom control
            Mouse.Click(uIPaneldevistapreviaCustom, new Point(275, 135));

            // Double-Click 'Nombre' text box
            Mouse.DoubleClick(uINombreEdit, new Point(28, 8));
        }
        
        /// <summary>
        /// PruebaSentarJugador2 - Use 'PruebaSentarJugador2Params' to pass parameters into this method.
        /// </summary>
        public void PruebaSentarJugador2()
        {
            #region Variable Declarations
            WinEdit uITxtBoxPlayerNameEdit = this.UIDominóWindow1.UITxtBoxPlayerNameWindow.UITxtBoxPlayerNameEdit;
            WinButton uISentarseButton = this.UIDominóWindow1.UISentarseWindow.UISentarseButton;
            #endregion

            // Type 'jessi' in 'txtBoxPlayerName' text box
            uITxtBoxPlayerNameEdit.Text = this.PruebaSentarJugador2Params.UITxtBoxPlayerNameEditText;

            // Click 'Sentarse' button
            Mouse.Click(uISentarseButton, new Point(42, 18));
        }
        
        /// <summary>
        /// PruebaAssertJugador2 - Use 'PruebaAssertJugador2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void PruebaAssertJugador2()
        {
            #region Variable Declarations
            WinGroup uIJessiGroup = this.UIDominóWindow1.UIJessiWindow.UIJessiGroup;
            #endregion

            // Verify that the 'Name' property of 'jessi' group equals 'jessi'
            Assert.AreEqual(this.PruebaAssertJugador2ExpectedValues.UIJessiGroupName, uIJessiGroup.Name);
        }
        
        /// <summary>
        /// PruebaAssertJugador2_1 - Use 'PruebaAssertJugador2_1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void PruebaAssertJugador2_1()
        {
            #region Variable Declarations
            WinGroup uIMarcosGroup = this.UIDominóWindow1.UIMarcosWindow.UIMarcosGroup;
            #endregion

            // Verify that the 'Name' property of 'marcos' group equals 'marcos'
            Assert.AreEqual(this.PruebaAssertJugador2_1ExpectedValues.UIMarcosGroupName, uIMarcosGroup.Name);
        }
        
        /// <summary>
        /// PruebaMesaDomino3
        /// </summary>
        public void PruebaMesaDomino3()
        {
            #region Variable Declarations
            WinCustom uIPaneldevistapreviaCustom = this.UIDebugWindow.UIPaneldelexploradorPane.UIPaneldevistapreviaCustom;
            WinControl uIItemImage = this.UIDebugWindow.UIItemWindow.UIDominoClienteexeListItem.UIItemImage;
            #endregion

            // Click 'Panel de vista previa' custom control
            Mouse.Click(uIPaneldevistapreviaCustom, new Point(231, 78));

            // Double-Click image
            Mouse.DoubleClick(uIItemImage, new Point(7, 8));
        }
        
        /// <summary>
        /// PruebaSentarJugador3 - Use 'PruebaSentarJugador3Params' to pass parameters into this method.
        /// </summary>
        public void PruebaSentarJugador3()
        {
            #region Variable Declarations
            WinEdit uITxtBoxPlayerNameEdit = this.UIDominóWindow2.UITxtBoxPlayerNameWindow.UITxtBoxPlayerNameEdit;
            WinButton uISentarseButton = this.UIDominóWindow2.UISentarseWindow.UISentarseButton;
            #endregion

            // Type 'pepe' in 'txtBoxPlayerName' text box
            uITxtBoxPlayerNameEdit.Text = this.PruebaSentarJugador3Params.UITxtBoxPlayerNameEditText;

            // Click 'Sentarse' button
            Mouse.Click(uISentarseButton, new Point(22, 18));
        }
        
        /// <summary>
        /// PruebaAssertJugador3 - Use 'PruebaAssertJugador3ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void PruebaAssertJugador3()
        {
            #region Variable Declarations
            WinGroup uIPepeGroup = this.UIDominóWindow2.UIPepeWindow.UIPepeGroup;
            #endregion

            // Verify that the 'Name' property of 'pepe' group equals 'pepe'
            Assert.AreEqual(this.PruebaAssertJugador3ExpectedValues.UIPepeGroupName, uIPepeGroup.Name);
        }
        
        /// <summary>
        /// PruebaAssertJugador3_2 - Use 'PruebaAssertJugador3_2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void PruebaAssertJugador3_2()
        {
            #region Variable Declarations
            WinGroup uIJessiGroup = this.UIDominóWindow2.UIJessiWindow.UIJessiGroup;
            #endregion

            // Verify that the 'Name' property of 'jessi' group equals 'jessi'
            Assert.AreEqual(this.PruebaAssertJugador3_2ExpectedValues.UIJessiGroupName, uIJessiGroup.Name);
        }
        
        /// <summary>
        /// PruebaAssertJugador3_1 - Use 'PruebaAssertJugador3_1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void PruebaAssertJugador3_1()
        {
            #region Variable Declarations
            WinGroup uIMarcosGroup = this.UIDominóWindow2.UIMarcosWindow.UIMarcosGroup;
            #endregion

            // Verify that the 'Name' property of 'marcos' group equals 'marcos'
            Assert.AreEqual(this.PruebaAssertJugador3_1ExpectedValues.UIMarcosGroupName, uIMarcosGroup.Name);
        }
        
        /// <summary>
        /// PruebaMesaDomino4
        /// </summary>
        public void PruebaMesaDomino4()
        {
            #region Variable Declarations
            WinCustom uIPaneldevistapreviaCustom = this.UIDebugWindow.UIPaneldelexploradorPane.UIPaneldevistapreviaCustom;
            WinControl uIItemImage = this.UIDebugWindow.UIItemWindow.UIDominoClienteexeListItem.UIItemImage;
            #endregion

            // Click 'Panel de vista previa' custom control
            Mouse.Click(uIPaneldevistapreviaCustom, new Point(261, 116));

            // Double-Click image
            Mouse.DoubleClick(uIItemImage, new Point(8, 3));
        }
        
        /// <summary>
        /// PruebaAssertJugador4 - Use 'PruebaAssertJugador4ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void PruebaAssertJugador4()
        {
            #region Variable Declarations
            WinGroup uIMonicaGroup = this.UIDominóWindow3.UIMonicaWindow.UIMonicaGroup;
            #endregion

            // Verify that the 'Name' property of 'monica' group equals 'monica'
            Assert.AreEqual(this.PruebaAssertJugador4ExpectedValues.UIMonicaGroupName, uIMonicaGroup.Name);
        }
        
        /// <summary>
        /// PruebaAssertJugador4_3 - Use 'PruebaAssertJugador4_3ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void PruebaAssertJugador4_3()
        {
            #region Variable Declarations
            WinGroup uIPepeGroup = this.UIDominóWindow3.UIPepeWindow.UIPepeGroup;
            #endregion

            // Verify that the 'Name' property of 'pepe' group equals 'pepe'
            Assert.AreEqual(this.PruebaAssertJugador4_3ExpectedValues.UIPepeGroupName, uIPepeGroup.Name);
        }
        
        /// <summary>
        /// PruebaAssertJugador4_2 - Use 'PruebaAssertJugador4_2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void PruebaAssertJugador4_2()
        {
            #region Variable Declarations
            WinGroup uIJessiGroup = this.UIDominóWindow3.UIJessiWindow.UIJessiGroup;
            #endregion

            // Verify that the 'Name' property of 'jessi' group equals 'jessi'
            Assert.AreEqual(this.PruebaAssertJugador4_2ExpectedValues.UIJessiGroupName, uIJessiGroup.Name);
        }
        
        /// <summary>
        /// PruebaAssertJugador4_1 - Use 'PruebaAssertJugador4_1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void PruebaAssertJugador4_1()
        {
            #region Variable Declarations
            WinGroup uIMarcosGroup = this.UIDominóWindow3.UIMarcosWindow.UIMarcosGroup;
            #endregion

            // Verify that the 'Name' property of 'marcos' group equals 'marcos'
            Assert.AreEqual(this.PruebaAssertJugador4_1ExpectedValues.UIMarcosGroupName, uIMarcosGroup.Name);
        }
        
        /// <summary>
        /// PruebaAsserNroFichar4 - Use 'PruebaAsserNroFichar4ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void PruebaAsserNroFichar4()
        {
            #region Variable Declarations
            WinText uIItem6Text = this.UIDominóWindow3.UIItem6Window.UIItem6Text;
            #endregion

            // Verify that the 'Name' property of '6' label equals '6'
            Assert.AreEqual(this.PruebaAsserNroFichar4ExpectedValues.UIItem6TextName, uIItem6Text.Name);
        }
        
        /// <summary>
        /// PruebaAsserNroFichar4_3 - Use 'PruebaAsserNroFichar4_3ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void PruebaAsserNroFichar4_3()
        {
            #region Variable Declarations
            WinText uIItem7Text = this.UIDominóWindow3.UIItem7Window.UIItem7Text;
            #endregion

            // Verify that the 'Name' property of '7' label equals '7'
            Assert.AreEqual(this.PruebaAsserNroFichar4_3ExpectedValues.UIItem7TextName, uIItem7Text.Name);
        }
        
        /// <summary>
        /// PruebaAsserNroFichar4_2 - Use 'PruebaAsserNroFichar4_2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void PruebaAsserNroFichar4_2()
        {
            #region Variable Declarations
            WinText uIItem7Text = this.UIDominóWindow3.UIItem7Window1.UIItem7Text;
            #endregion

            // Verify that the 'Name' property of '7' label equals '7'
            Assert.AreEqual(this.PruebaAsserNroFichar4_2ExpectedValues.UIItem7TextName, uIItem7Text.Name);
        }
        
        /// <summary>
        /// PruebaAsserNroFichar4_1 - Use 'PruebaAsserNroFichar4_1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void PruebaAsserNroFichar4_1()
        {
            #region Variable Declarations
            WinText uIItem7Text = this.UIDominóWindow3.UIItem7Window2.UIItem7Text;
            #endregion

            // Verify that the 'Name' property of '7' label equals '7'
            Assert.AreEqual(this.PruebaAsserNroFichar4_1ExpectedValues.UIItem7TextName, uIItem7Text.Name);
        }
        
        /// <summary>
        /// PruebaCerrarMesa4
        /// </summary>
        public void PruebaCerrarMesa4()
        {
            #region Variable Declarations
            WinButton uICerrarButton = this.UIDominóWindow3.UIDominóTitleBar.UICerrarButton;
            #endregion

            // Click 'Cerrar' button
            Mouse.Click(uICerrarButton, new Point(27, 3));
        }
        
        /// <summary>
        /// PruebaCerrarMesa3
        /// </summary>
        public void PruebaCerrarMesa3()
        {
            #region Variable Declarations
            WinButton uICerrarButton = this.UIDominóWindow2.UIDominóTitleBar.UICerrarButton;
            #endregion

            // Click 'Cerrar' button
            Mouse.Click(uICerrarButton, new Point(20, 11));
        }
        
        /// <summary>
        /// PruebaCerrarMesa2
        /// </summary>
        public void PruebaCerrarMesa2()
        {
            #region Variable Declarations
            WinButton uICerrarButton = this.UIDominóWindow1.UIDominóTitleBar.UICerrarButton;
            #endregion

            // Click 'Cerrar' button
            Mouse.Click(uICerrarButton, new Point(22, 9));
        }
        
        /// <summary>
        /// PruebaCerrarMesa1
        /// </summary>
        public void PruebaCerrarMesa1()
        {
            #region Variable Declarations
            WinButton uICerrarButton = this.UIDominóWindow.UIDominóTitleBar.UICerrarButton;
            #endregion

            // Click 'Cerrar' button
            Mouse.Click(uICerrarButton, new Point(20, 6));
        }
        
        #region Properties
        public virtual SentarJugador1Params SentarJugador1Params
        {
            get
            {
                if ((this.mSentarJugador1Params == null))
                {
                    this.mSentarJugador1Params = new SentarJugador1Params();
                }
                return this.mSentarJugador1Params;
            }
        }
        
        public virtual SentarJugador2Params SentarJugador2Params
        {
            get
            {
                if ((this.mSentarJugador2Params == null))
                {
                    this.mSentarJugador2Params = new SentarJugador2Params();
                }
                return this.mSentarJugador2Params;
            }
        }
        
        public virtual SentarJugador3Params SentarJugador3Params
        {
            get
            {
                if ((this.mSentarJugador3Params == null))
                {
                    this.mSentarJugador3Params = new SentarJugador3Params();
                }
                return this.mSentarJugador3Params;
            }
        }
        
        public virtual SentarJugador4Params SentarJugador4Params
        {
            get
            {
                if ((this.mSentarJugador4Params == null))
                {
                    this.mSentarJugador4Params = new SentarJugador4Params();
                }
                return this.mSentarJugador4Params;
            }
        }
        
        public virtual SentarJugador5Params SentarJugador5Params
        {
            get
            {
                if ((this.mSentarJugador5Params == null))
                {
                    this.mSentarJugador5Params = new SentarJugador5Params();
                }
                return this.mSentarJugador5Params;
            }
        }
        
        public virtual SentarJugadorNombreRepetidoParams SentarJugadorNombreRepetidoParams
        {
            get
            {
                if ((this.mSentarJugadorNombreRepetidoParams == null))
                {
                    this.mSentarJugadorNombreRepetidoParams = new SentarJugadorNombreRepetidoParams();
                }
                return this.mSentarJugadorNombreRepetidoParams;
            }
        }
        
        public virtual SentarJugadorOKParams SentarJugadorOKParams
        {
            get
            {
                if ((this.mSentarJugadorOKParams == null))
                {
                    this.mSentarJugadorOKParams = new SentarJugadorOKParams();
                }
                return this.mSentarJugadorOKParams;
            }
        }
        
        public virtual meeesaaaaLlenaParams meeesaaaaLlenaParams
        {
            get
            {
                if ((this.mmeeesaaaaLlenaParams == null))
                {
                    this.mmeeesaaaaLlenaParams = new meeesaaaaLlenaParams();
                }
                return this.mmeeesaaaaLlenaParams;
            }
        }
        
        public virtual SentarMarcos1Params SentarMarcos1Params
        {
            get
            {
                if ((this.mSentarMarcos1Params == null))
                {
                    this.mSentarMarcos1Params = new SentarMarcos1Params();
                }
                return this.mSentarMarcos1Params;
            }
        }
        
        public virtual AssertNombre1ExpectedValues AssertNombre1ExpectedValues
        {
            get
            {
                if ((this.mAssertNombre1ExpectedValues == null))
                {
                    this.mAssertNombre1ExpectedValues = new AssertNombre1ExpectedValues();
                }
                return this.mAssertNombre1ExpectedValues;
            }
        }
        
        public virtual InicioDomino2Params InicioDomino2Params
        {
            get
            {
                if ((this.mInicioDomino2Params == null))
                {
                    this.mInicioDomino2Params = new InicioDomino2Params();
                }
                return this.mInicioDomino2Params;
            }
        }
        
        public virtual SentarJessi2Params SentarJessi2Params
        {
            get
            {
                if ((this.mSentarJessi2Params == null))
                {
                    this.mSentarJessi2Params = new SentarJessi2Params();
                }
                return this.mSentarJessi2Params;
            }
        }
        
        public virtual SentarPepe3Params SentarPepe3Params
        {
            get
            {
                if ((this.mSentarPepe3Params == null))
                {
                    this.mSentarPepe3Params = new SentarPepe3Params();
                }
                return this.mSentarPepe3Params;
            }
        }
        
        public virtual AssertNombre3ExpectedValues AssertNombre3ExpectedValues
        {
            get
            {
                if ((this.mAssertNombre3ExpectedValues == null))
                {
                    this.mAssertNombre3ExpectedValues = new AssertNombre3ExpectedValues();
                }
                return this.mAssertNombre3ExpectedValues;
            }
        }
        
        public virtual AssertNombre4ExpectedValues AssertNombre4ExpectedValues
        {
            get
            {
                if ((this.mAssertNombre4ExpectedValues == null))
                {
                    this.mAssertNombre4ExpectedValues = new AssertNombre4ExpectedValues();
                }
                return this.mAssertNombre4ExpectedValues;
            }
        }
        
        public virtual PruebaSentarJugador1Params PruebaSentarJugador1Params
        {
            get
            {
                if ((this.mPruebaSentarJugador1Params == null))
                {
                    this.mPruebaSentarJugador1Params = new PruebaSentarJugador1Params();
                }
                return this.mPruebaSentarJugador1Params;
            }
        }
        
        public virtual PruebaAssertJugador1ExpectedValues PruebaAssertJugador1ExpectedValues
        {
            get
            {
                if ((this.mPruebaAssertJugador1ExpectedValues == null))
                {
                    this.mPruebaAssertJugador1ExpectedValues = new PruebaAssertJugador1ExpectedValues();
                }
                return this.mPruebaAssertJugador1ExpectedValues;
            }
        }
        
        public virtual PruebaSentarJugador2Params PruebaSentarJugador2Params
        {
            get
            {
                if ((this.mPruebaSentarJugador2Params == null))
                {
                    this.mPruebaSentarJugador2Params = new PruebaSentarJugador2Params();
                }
                return this.mPruebaSentarJugador2Params;
            }
        }
        
        public virtual PruebaAssertJugador2ExpectedValues PruebaAssertJugador2ExpectedValues
        {
            get
            {
                if ((this.mPruebaAssertJugador2ExpectedValues == null))
                {
                    this.mPruebaAssertJugador2ExpectedValues = new PruebaAssertJugador2ExpectedValues();
                }
                return this.mPruebaAssertJugador2ExpectedValues;
            }
        }
        
        public virtual PruebaAssertJugador2_1ExpectedValues PruebaAssertJugador2_1ExpectedValues
        {
            get
            {
                if ((this.mPruebaAssertJugador2_1ExpectedValues == null))
                {
                    this.mPruebaAssertJugador2_1ExpectedValues = new PruebaAssertJugador2_1ExpectedValues();
                }
                return this.mPruebaAssertJugador2_1ExpectedValues;
            }
        }
        
        public virtual PruebaSentarJugador3Params PruebaSentarJugador3Params
        {
            get
            {
                if ((this.mPruebaSentarJugador3Params == null))
                {
                    this.mPruebaSentarJugador3Params = new PruebaSentarJugador3Params();
                }
                return this.mPruebaSentarJugador3Params;
            }
        }
        
        public virtual PruebaAssertJugador3ExpectedValues PruebaAssertJugador3ExpectedValues
        {
            get
            {
                if ((this.mPruebaAssertJugador3ExpectedValues == null))
                {
                    this.mPruebaAssertJugador3ExpectedValues = new PruebaAssertJugador3ExpectedValues();
                }
                return this.mPruebaAssertJugador3ExpectedValues;
            }
        }
        
        public virtual PruebaAssertJugador3_2ExpectedValues PruebaAssertJugador3_2ExpectedValues
        {
            get
            {
                if ((this.mPruebaAssertJugador3_2ExpectedValues == null))
                {
                    this.mPruebaAssertJugador3_2ExpectedValues = new PruebaAssertJugador3_2ExpectedValues();
                }
                return this.mPruebaAssertJugador3_2ExpectedValues;
            }
        }
        
        public virtual PruebaAssertJugador3_1ExpectedValues PruebaAssertJugador3_1ExpectedValues
        {
            get
            {
                if ((this.mPruebaAssertJugador3_1ExpectedValues == null))
                {
                    this.mPruebaAssertJugador3_1ExpectedValues = new PruebaAssertJugador3_1ExpectedValues();
                }
                return this.mPruebaAssertJugador3_1ExpectedValues;
            }
        }
        
        public virtual PruebaAssertJugador4ExpectedValues PruebaAssertJugador4ExpectedValues
        {
            get
            {
                if ((this.mPruebaAssertJugador4ExpectedValues == null))
                {
                    this.mPruebaAssertJugador4ExpectedValues = new PruebaAssertJugador4ExpectedValues();
                }
                return this.mPruebaAssertJugador4ExpectedValues;
            }
        }
        
        public virtual PruebaAssertJugador4_3ExpectedValues PruebaAssertJugador4_3ExpectedValues
        {
            get
            {
                if ((this.mPruebaAssertJugador4_3ExpectedValues == null))
                {
                    this.mPruebaAssertJugador4_3ExpectedValues = new PruebaAssertJugador4_3ExpectedValues();
                }
                return this.mPruebaAssertJugador4_3ExpectedValues;
            }
        }
        
        public virtual PruebaAssertJugador4_2ExpectedValues PruebaAssertJugador4_2ExpectedValues
        {
            get
            {
                if ((this.mPruebaAssertJugador4_2ExpectedValues == null))
                {
                    this.mPruebaAssertJugador4_2ExpectedValues = new PruebaAssertJugador4_2ExpectedValues();
                }
                return this.mPruebaAssertJugador4_2ExpectedValues;
            }
        }
        
        public virtual PruebaAssertJugador4_1ExpectedValues PruebaAssertJugador4_1ExpectedValues
        {
            get
            {
                if ((this.mPruebaAssertJugador4_1ExpectedValues == null))
                {
                    this.mPruebaAssertJugador4_1ExpectedValues = new PruebaAssertJugador4_1ExpectedValues();
                }
                return this.mPruebaAssertJugador4_1ExpectedValues;
            }
        }
        
        public virtual PruebaAsserNroFichar4ExpectedValues PruebaAsserNroFichar4ExpectedValues
        {
            get
            {
                if ((this.mPruebaAsserNroFichar4ExpectedValues == null))
                {
                    this.mPruebaAsserNroFichar4ExpectedValues = new PruebaAsserNroFichar4ExpectedValues();
                }
                return this.mPruebaAsserNroFichar4ExpectedValues;
            }
        }
        
        public virtual PruebaAsserNroFichar4_3ExpectedValues PruebaAsserNroFichar4_3ExpectedValues
        {
            get
            {
                if ((this.mPruebaAsserNroFichar4_3ExpectedValues == null))
                {
                    this.mPruebaAsserNroFichar4_3ExpectedValues = new PruebaAsserNroFichar4_3ExpectedValues();
                }
                return this.mPruebaAsserNroFichar4_3ExpectedValues;
            }
        }
        
        public virtual PruebaAsserNroFichar4_2ExpectedValues PruebaAsserNroFichar4_2ExpectedValues
        {
            get
            {
                if ((this.mPruebaAsserNroFichar4_2ExpectedValues == null))
                {
                    this.mPruebaAsserNroFichar4_2ExpectedValues = new PruebaAsserNroFichar4_2ExpectedValues();
                }
                return this.mPruebaAsserNroFichar4_2ExpectedValues;
            }
        }
        
        public virtual PruebaAsserNroFichar4_1ExpectedValues PruebaAsserNroFichar4_1ExpectedValues
        {
            get
            {
                if ((this.mPruebaAsserNroFichar4_1ExpectedValues == null))
                {
                    this.mPruebaAsserNroFichar4_1ExpectedValues = new PruebaAsserNroFichar4_1ExpectedValues();
                }
                return this.mPruebaAsserNroFichar4_1ExpectedValues;
            }
        }
        
        public UIReleaseWindow UIReleaseWindow
        {
            get
            {
                if ((this.mUIReleaseWindow == null))
                {
                    this.mUIReleaseWindow = new UIReleaseWindow();
                }
                return this.mUIReleaseWindow;
            }
        }
        
        public UIDominóWindow UIDominóWindow
        {
            get
            {
                if ((this.mUIDominóWindow == null))
                {
                    this.mUIDominóWindow = new UIDominóWindow();
                }
                return this.mUIDominóWindow;
            }
        }
        
        public UIDominóWindow1 UIDominóWindow1
        {
            get
            {
                if ((this.mUIDominóWindow1 == null))
                {
                    this.mUIDominóWindow1 = new UIDominóWindow1();
                }
                return this.mUIDominóWindow1;
            }
        }
        
        public UIDominóWindow2 UIDominóWindow2
        {
            get
            {
                if ((this.mUIDominóWindow2 == null))
                {
                    this.mUIDominóWindow2 = new UIDominóWindow2();
                }
                return this.mUIDominóWindow2;
            }
        }
        
        public UIDominóWindow3 UIDominóWindow3
        {
            get
            {
                if ((this.mUIDominóWindow3 == null))
                {
                    this.mUIDominóWindow3 = new UIDominóWindow3();
                }
                return this.mUIDominóWindow3;
            }
        }
        
        public UIDominóWindow4 UIDominóWindow4
        {
            get
            {
                if ((this.mUIDominóWindow4 == null))
                {
                    this.mUIDominóWindow4 = new UIDominóWindow4();
                }
                return this.mUIDominóWindow4;
            }
        }
        
        public UIAceptarWindow UIAceptarWindow
        {
            get
            {
                if ((this.mUIAceptarWindow == null))
                {
                    this.mUIAceptarWindow = new UIAceptarWindow();
                }
                return this.mUIAceptarWindow;
            }
        }
        
        public UIDebugWindow UIDebugWindow
        {
            get
            {
                if ((this.mUIDebugWindow == null))
                {
                    this.mUIDebugWindow = new UIDebugWindow();
                }
                return this.mUIDebugWindow;
            }
        }
        #endregion
        
        #region Fields
        private SentarJugador1Params mSentarJugador1Params;
        
        private SentarJugador2Params mSentarJugador2Params;
        
        private SentarJugador3Params mSentarJugador3Params;
        
        private SentarJugador4Params mSentarJugador4Params;
        
        private SentarJugador5Params mSentarJugador5Params;
        
        private SentarJugadorNombreRepetidoParams mSentarJugadorNombreRepetidoParams;
        
        private SentarJugadorOKParams mSentarJugadorOKParams;
        
        private meeesaaaaLlenaParams mmeeesaaaaLlenaParams;
        
        private SentarMarcos1Params mSentarMarcos1Params;
        
        private AssertNombre1ExpectedValues mAssertNombre1ExpectedValues;
        
        private InicioDomino2Params mInicioDomino2Params;
        
        private SentarJessi2Params mSentarJessi2Params;
        
        private SentarPepe3Params mSentarPepe3Params;
        
        private AssertNombre3ExpectedValues mAssertNombre3ExpectedValues;
        
        private AssertNombre4ExpectedValues mAssertNombre4ExpectedValues;
        
        private PruebaSentarJugador1Params mPruebaSentarJugador1Params;
        
        private PruebaAssertJugador1ExpectedValues mPruebaAssertJugador1ExpectedValues;
        
        private PruebaSentarJugador2Params mPruebaSentarJugador2Params;
        
        private PruebaAssertJugador2ExpectedValues mPruebaAssertJugador2ExpectedValues;
        
        private PruebaAssertJugador2_1ExpectedValues mPruebaAssertJugador2_1ExpectedValues;
        
        private PruebaSentarJugador3Params mPruebaSentarJugador3Params;
        
        private PruebaAssertJugador3ExpectedValues mPruebaAssertJugador3ExpectedValues;
        
        private PruebaAssertJugador3_2ExpectedValues mPruebaAssertJugador3_2ExpectedValues;
        
        private PruebaAssertJugador3_1ExpectedValues mPruebaAssertJugador3_1ExpectedValues;
        
        private PruebaAssertJugador4ExpectedValues mPruebaAssertJugador4ExpectedValues;
        
        private PruebaAssertJugador4_3ExpectedValues mPruebaAssertJugador4_3ExpectedValues;
        
        private PruebaAssertJugador4_2ExpectedValues mPruebaAssertJugador4_2ExpectedValues;
        
        private PruebaAssertJugador4_1ExpectedValues mPruebaAssertJugador4_1ExpectedValues;
        
        private PruebaAsserNroFichar4ExpectedValues mPruebaAsserNroFichar4ExpectedValues;
        
        private PruebaAsserNroFichar4_3ExpectedValues mPruebaAsserNroFichar4_3ExpectedValues;
        
        private PruebaAsserNroFichar4_2ExpectedValues mPruebaAsserNroFichar4_2ExpectedValues;
        
        private PruebaAsserNroFichar4_1ExpectedValues mPruebaAsserNroFichar4_1ExpectedValues;
        
        private UIReleaseWindow mUIReleaseWindow;
        
        private UIDominóWindow mUIDominóWindow;
        
        private UIDominóWindow1 mUIDominóWindow1;
        
        private UIDominóWindow2 mUIDominóWindow2;
        
        private UIDominóWindow3 mUIDominóWindow3;
        
        private UIDominóWindow4 mUIDominóWindow4;
        
        private UIAceptarWindow mUIAceptarWindow;
        
        private UIDebugWindow mUIDebugWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SentarJugador1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class SentarJugador1Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'Jessica' in 'txtBoxPlayerName' text box
        /// </summary>
        public string UITxtBoxPlayerNameEditText = "Jessica";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SentarJugador2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class SentarJugador2Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'Marcos' in 'txtBoxPlayerName' text box
        /// </summary>
        public string UITxtBoxPlayerNameEditText = "Marcos";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SentarJugador3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class SentarJugador3Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'Laura' in 'txtBoxPlayerName' text box
        /// </summary>
        public string UITxtBoxPlayerNameEditText = "Laura";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SentarJugador4'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class SentarJugador4Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'Ismael' in 'txtBoxPlayerName' text box
        /// </summary>
        public string UITxtBoxPlayerNameEditText = "Ismael";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SentarJugador5'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class SentarJugador5Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'Esther' in 'txtBoxPlayerName' text box
        /// </summary>
        public string UITxtBoxPlayerNameEditText = "Esther";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SentarJugadorNombreRepetido'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class SentarJugadorNombreRepetidoParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Laura' in 'txtBoxPlayerName' text box
        /// </summary>
        public string UITxtBoxPlayerNameEditText = "Laura";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SentarJugadorOK'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class SentarJugadorOKParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Luis' in 'txtBoxPlayerName' text box
        /// </summary>
        public string UITxtBoxPlayerNameEditText = "Luis";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'meeesaaaaLlena'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class meeesaaaaLlenaParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Fran' in 'txtBoxPlayerName' text box
        /// </summary>
        public string UITxtBoxPlayerNameEditText = "Fran";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SentarMarcos1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class SentarMarcos1Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'marcos' in 'txtBoxPlayerName' text box
        /// </summary>
        public string UITxtBoxPlayerNameEditText = "marcos";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertNombre1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertNombre1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'txtBoxPlayerName' text box is not equal to ''
        /// </summary>
        public string UITxtBoxPlayerNameEditControlType = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'InicioDomino2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class InicioDomino2Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'jessi' in 'txtBoxPlayerName' text box
        /// </summary>
        public string UITxtBoxPlayerNameEditText = "jessi";
        
        /// <summary>
        /// Type '' in 'txtBoxPlayerName' text box
        /// </summary>
        public string UITxtBoxPlayerNameEditText1 = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SentarJessi2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class SentarJessi2Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'jessi' in 'txtBoxPlayerName' text box
        /// </summary>
        public string UITxtBoxPlayerNameEditText = "jessi";
        
        /// <summary>
        /// Type '{Tab}' in 'txtBoxPlayerName' text box
        /// </summary>
        public string UITxtBoxPlayerNameEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Enter}' in 'Sentarse' button
        /// </summary>
        public string UISentarseButtonSendKeys = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SentarPepe3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class SentarPepe3Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'pepe' in 'txtBoxPlayerName' text box
        /// </summary>
        public string UITxtBoxPlayerNameEditText = "pepe";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertNombre3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertNombre3ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'txtBoxPlayerName' text box is not equal to ''
        /// </summary>
        public string UITxtBoxPlayerNameEditControlType = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertNombre4'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertNombre4ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'AccessibleName' property of 'txtBoxPlayerName' window is not equal to ''
        /// </summary>
        public string UITxtBoxPlayerNameWindowAccessibleName = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'PruebaSentarJugador1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class PruebaSentarJugador1Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'marcos' in 'txtBoxPlayerName' text box
        /// </summary>
        public string UITxtBoxPlayerNameEditText = "marcos";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'PruebaAssertJugador1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class PruebaAssertJugador1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'marcos' group equals 'marcos'
        /// </summary>
        public string UIMarcosGroupName = "marcos";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'PruebaSentarJugador2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class PruebaSentarJugador2Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'jessi' in 'txtBoxPlayerName' text box
        /// </summary>
        public string UITxtBoxPlayerNameEditText = "jessi";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'PruebaAssertJugador2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class PruebaAssertJugador2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'jessi' group equals 'jessi'
        /// </summary>
        public string UIJessiGroupName = "jessi";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'PruebaAssertJugador2_1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class PruebaAssertJugador2_1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'marcos' group equals 'marcos'
        /// </summary>
        public string UIMarcosGroupName = "marcos";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'PruebaSentarJugador3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class PruebaSentarJugador3Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'pepe' in 'txtBoxPlayerName' text box
        /// </summary>
        public string UITxtBoxPlayerNameEditText = "pepe";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'PruebaAssertJugador3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class PruebaAssertJugador3ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'pepe' group equals 'pepe'
        /// </summary>
        public string UIPepeGroupName = "pepe";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'PruebaAssertJugador3_2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class PruebaAssertJugador3_2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'jessi' group equals 'jessi'
        /// </summary>
        public string UIJessiGroupName = "jessi";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'PruebaAssertJugador3_1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class PruebaAssertJugador3_1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'marcos' group equals 'marcos'
        /// </summary>
        public string UIMarcosGroupName = "marcos";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'PruebaAssertJugador4'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class PruebaAssertJugador4ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'monica' group equals 'monica'
        /// </summary>
        public string UIMonicaGroupName = "monica";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'PruebaAssertJugador4_3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class PruebaAssertJugador4_3ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'pepe' group equals 'pepe'
        /// </summary>
        public string UIPepeGroupName = "pepe";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'PruebaAssertJugador4_2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class PruebaAssertJugador4_2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'jessi' group equals 'jessi'
        /// </summary>
        public string UIJessiGroupName = "jessi";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'PruebaAssertJugador4_1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class PruebaAssertJugador4_1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'marcos' group equals 'marcos'
        /// </summary>
        public string UIMarcosGroupName = "marcos";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'PruebaAsserNroFichar4'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class PruebaAsserNroFichar4ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of '6' label equals '6'
        /// </summary>
        public string UIItem6TextName = "6";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'PruebaAsserNroFichar4_3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class PruebaAsserNroFichar4_3ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of '7' label equals '7'
        /// </summary>
        public string UIItem7TextName = "7";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'PruebaAsserNroFichar4_2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class PruebaAsserNroFichar4_2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of '7' label equals '7'
        /// </summary>
        public string UIItem7TextName = "7";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'PruebaAsserNroFichar4_1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class PruebaAsserNroFichar4_1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of '7' label equals '7'
        /// </summary>
        public string UIItem7TextName = "7";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIReleaseWindow : WinWindow
    {
        
        public UIReleaseWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Release";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CabinetWClass";
            this.WindowTitles.Add("Release");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public WinTitleBar UIReleaseTitleBar
        {
            get
            {
                if ((this.mUIReleaseTitleBar == null))
                {
                    this.mUIReleaseTitleBar = new WinTitleBar(this);
                    #region Search Criteria
                    this.mUIReleaseTitleBar.WindowTitles.Add("Release");
                    #endregion
                }
                return this.mUIReleaseTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        
        private WinTitleBar mUIReleaseTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Vista Elementos";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Release");
            #endregion
        }
        
        #region Properties
        public UIDominoClienteListItem UIDominoClienteListItem
        {
            get
            {
                if ((this.mUIDominoClienteListItem == null))
                {
                    this.mUIDominoClienteListItem = new UIDominoClienteListItem(this);
                }
                return this.mUIDominoClienteListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIDominoClienteListItem mUIDominoClienteListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIDominoClienteListItem : WinListItem
    {
        
        public UIDominoClienteListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "DominoCliente";
            this.WindowTitles.Add("Release");
            #endregion
        }
        
        #region Properties
        public WinEdit UINombreEdit
        {
            get
            {
                if ((this.mUINombreEdit == null))
                {
                    this.mUINombreEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINombreEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Nombre";
                    this.mUINombreEdit.WindowTitles.Add("Release");
                    #endregion
                }
                return this.mUINombreEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINombreEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIDominóWindow : WinWindow
    {
        
        public UIDominóWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Dominó";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Dominó");
            #endregion
        }
        
        #region Properties
        public UITxtBoxPlayerNameWindow UITxtBoxPlayerNameWindow
        {
            get
            {
                if ((this.mUITxtBoxPlayerNameWindow == null))
                {
                    this.mUITxtBoxPlayerNameWindow = new UITxtBoxPlayerNameWindow(this);
                }
                return this.mUITxtBoxPlayerNameWindow;
            }
        }
        
        public UISentarseWindow UISentarseWindow
        {
            get
            {
                if ((this.mUISentarseWindow == null))
                {
                    this.mUISentarseWindow = new UISentarseWindow(this);
                }
                return this.mUISentarseWindow;
            }
        }
        
        public UIDominóTitleBar UIDominóTitleBar
        {
            get
            {
                if ((this.mUIDominóTitleBar == null))
                {
                    this.mUIDominóTitleBar = new UIDominóTitleBar(this);
                }
                return this.mUIDominóTitleBar;
            }
        }
        
        public UIMarcosWindow UIMarcosWindow
        {
            get
            {
                if ((this.mUIMarcosWindow == null))
                {
                    this.mUIMarcosWindow = new UIMarcosWindow(this);
                }
                return this.mUIMarcosWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITxtBoxPlayerNameWindow mUITxtBoxPlayerNameWindow;
        
        private UISentarseWindow mUISentarseWindow;
        
        private UIDominóTitleBar mUIDominóTitleBar;
        
        private UIMarcosWindow mUIMarcosWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITxtBoxPlayerNameWindow : WinWindow
    {
        
        public UITxtBoxPlayerNameWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtBoxPlayerName";
            this.WindowTitles.Add("Dominó");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtBoxPlayerNameEdit
        {
            get
            {
                if ((this.mUITxtBoxPlayerNameEdit == null))
                {
                    this.mUITxtBoxPlayerNameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtBoxPlayerNameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Nombre:";
                    this.mUITxtBoxPlayerNameEdit.WindowTitles.Add("Dominó");
                    #endregion
                }
                return this.mUITxtBoxPlayerNameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtBoxPlayerNameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UISentarseWindow : WinWindow
    {
        
        public UISentarseWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnSentarse";
            this.WindowTitles.Add("Dominó");
            #endregion
        }
        
        #region Properties
        public WinButton UISentarseButton
        {
            get
            {
                if ((this.mUISentarseButton == null))
                {
                    this.mUISentarseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISentarseButton.SearchProperties[WinButton.PropertyNames.Name] = "Sentarse";
                    this.mUISentarseButton.WindowTitles.Add("Dominó");
                    #endregion
                }
                return this.mUISentarseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISentarseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIDominóTitleBar : WinTitleBar
    {
        
        public UIDominóTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Dominó");
            #endregion
        }
        
        #region Properties
        public WinButton UICerrarButton
        {
            get
            {
                if ((this.mUICerrarButton == null))
                {
                    this.mUICerrarButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICerrarButton.SearchProperties[WinButton.PropertyNames.Name] = "Cerrar";
                    this.mUICerrarButton.WindowTitles.Add("Dominó");
                    #endregion
                }
                return this.mUICerrarButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICerrarButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIMarcosWindow : WinWindow
    {
        
        public UIMarcosWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "grpBoxJugador1";
            this.WindowTitles.Add("Dominó");
            #endregion
        }
        
        #region Properties
        public WinGroup UIMarcosGroup
        {
            get
            {
                if ((this.mUIMarcosGroup == null))
                {
                    this.mUIMarcosGroup = new WinGroup(this);
                    #region Search Criteria
                    this.mUIMarcosGroup.SearchProperties[WinControl.PropertyNames.Name] = "marcos";
                    this.mUIMarcosGroup.WindowTitles.Add("Dominó");
                    #endregion
                }
                return this.mUIMarcosGroup;
            }
        }
        #endregion
        
        #region Fields
        private WinGroup mUIMarcosGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIDominóWindow1 : WinWindow
    {
        
        public UIDominóWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Dominó";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.FilterProperties[WinWindow.PropertyNames.OrderOfInvocation] = "2";
            this.WindowTitles.Add("Dominó");
            #endregion
        }
        
        #region Properties
        public UITxtBoxPlayerNameWindow1 UITxtBoxPlayerNameWindow
        {
            get
            {
                if ((this.mUITxtBoxPlayerNameWindow == null))
                {
                    this.mUITxtBoxPlayerNameWindow = new UITxtBoxPlayerNameWindow1(this);
                }
                return this.mUITxtBoxPlayerNameWindow;
            }
        }
        
        public UISentarseWindow1 UISentarseWindow
        {
            get
            {
                if ((this.mUISentarseWindow == null))
                {
                    this.mUISentarseWindow = new UISentarseWindow1(this);
                }
                return this.mUISentarseWindow;
            }
        }
        
        public UIDominóTitleBar1 UIDominóTitleBar
        {
            get
            {
                if ((this.mUIDominóTitleBar == null))
                {
                    this.mUIDominóTitleBar = new UIDominóTitleBar1(this);
                }
                return this.mUIDominóTitleBar;
            }
        }
        
        public UIJessiWindow UIJessiWindow
        {
            get
            {
                if ((this.mUIJessiWindow == null))
                {
                    this.mUIJessiWindow = new UIJessiWindow(this);
                }
                return this.mUIJessiWindow;
            }
        }
        
        public UIMarcosWindow1 UIMarcosWindow
        {
            get
            {
                if ((this.mUIMarcosWindow == null))
                {
                    this.mUIMarcosWindow = new UIMarcosWindow1(this);
                }
                return this.mUIMarcosWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITxtBoxPlayerNameWindow1 mUITxtBoxPlayerNameWindow;
        
        private UISentarseWindow1 mUISentarseWindow;
        
        private UIDominóTitleBar1 mUIDominóTitleBar;
        
        private UIJessiWindow mUIJessiWindow;
        
        private UIMarcosWindow1 mUIMarcosWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITxtBoxPlayerNameWindow1 : WinWindow
    {
        
        public UITxtBoxPlayerNameWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtBoxPlayerName";
            this.WindowTitles.Add("Dominó");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtBoxPlayerNameEdit
        {
            get
            {
                if ((this.mUITxtBoxPlayerNameEdit == null))
                {
                    this.mUITxtBoxPlayerNameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtBoxPlayerNameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Nombre:";
                    this.mUITxtBoxPlayerNameEdit.WindowTitles.Add("Dominó");
                    #endregion
                }
                return this.mUITxtBoxPlayerNameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtBoxPlayerNameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UISentarseWindow1 : WinWindow
    {
        
        public UISentarseWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnSentarse";
            this.WindowTitles.Add("Dominó");
            #endregion
        }
        
        #region Properties
        public WinButton UISentarseButton
        {
            get
            {
                if ((this.mUISentarseButton == null))
                {
                    this.mUISentarseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISentarseButton.SearchProperties[WinButton.PropertyNames.Name] = "Sentarse";
                    this.mUISentarseButton.WindowTitles.Add("Dominó");
                    #endregion
                }
                return this.mUISentarseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISentarseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIDominóTitleBar1 : WinTitleBar
    {
        
        public UIDominóTitleBar1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Dominó");
            #endregion
        }
        
        #region Properties
        public WinButton UICerrarButton
        {
            get
            {
                if ((this.mUICerrarButton == null))
                {
                    this.mUICerrarButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICerrarButton.SearchProperties[WinButton.PropertyNames.Name] = "Cerrar";
                    this.mUICerrarButton.WindowTitles.Add("Dominó");
                    #endregion
                }
                return this.mUICerrarButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICerrarButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIJessiWindow : WinWindow
    {
        
        public UIJessiWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "grpBoxJugador2";
            this.WindowTitles.Add("Dominó");
            #endregion
        }
        
        #region Properties
        public WinGroup UIJessiGroup
        {
            get
            {
                if ((this.mUIJessiGroup == null))
                {
                    this.mUIJessiGroup = new WinGroup(this);
                    #region Search Criteria
                    this.mUIJessiGroup.SearchProperties[WinControl.PropertyNames.Name] = "jessi";
                    this.mUIJessiGroup.WindowTitles.Add("Dominó");
                    #endregion
                }
                return this.mUIJessiGroup;
            }
        }
        #endregion
        
        #region Fields
        private WinGroup mUIJessiGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIMarcosWindow1 : WinWindow
    {
        
        public UIMarcosWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "grpBoxJugador1";
            this.WindowTitles.Add("Dominó");
            #endregion
        }
        
        #region Properties
        public WinGroup UIMarcosGroup
        {
            get
            {
                if ((this.mUIMarcosGroup == null))
                {
                    this.mUIMarcosGroup = new WinGroup(this);
                    #region Search Criteria
                    this.mUIMarcosGroup.SearchProperties[WinControl.PropertyNames.Name] = "marcos";
                    this.mUIMarcosGroup.WindowTitles.Add("Dominó");
                    #endregion
                }
                return this.mUIMarcosGroup;
            }
        }
        #endregion
        
        #region Fields
        private WinGroup mUIMarcosGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIDominóWindow2 : WinWindow
    {
        
        public UIDominóWindow2()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Dominó";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.FilterProperties[WinWindow.PropertyNames.OrderOfInvocation] = "3";
            this.WindowTitles.Add("Dominó");
            #endregion
        }
        
        #region Properties
        public UITxtBoxPlayerNameWindow2 UITxtBoxPlayerNameWindow
        {
            get
            {
                if ((this.mUITxtBoxPlayerNameWindow == null))
                {
                    this.mUITxtBoxPlayerNameWindow = new UITxtBoxPlayerNameWindow2(this);
                }
                return this.mUITxtBoxPlayerNameWindow;
            }
        }
        
        public UISentarseWindow2 UISentarseWindow
        {
            get
            {
                if ((this.mUISentarseWindow == null))
                {
                    this.mUISentarseWindow = new UISentarseWindow2(this);
                }
                return this.mUISentarseWindow;
            }
        }
        
        public UIDominóTitleBar2 UIDominóTitleBar
        {
            get
            {
                if ((this.mUIDominóTitleBar == null))
                {
                    this.mUIDominóTitleBar = new UIDominóTitleBar2(this);
                }
                return this.mUIDominóTitleBar;
            }
        }
        
        public UIPepeWindow UIPepeWindow
        {
            get
            {
                if ((this.mUIPepeWindow == null))
                {
                    this.mUIPepeWindow = new UIPepeWindow(this);
                }
                return this.mUIPepeWindow;
            }
        }
        
        public UIJessiWindow1 UIJessiWindow
        {
            get
            {
                if ((this.mUIJessiWindow == null))
                {
                    this.mUIJessiWindow = new UIJessiWindow1(this);
                }
                return this.mUIJessiWindow;
            }
        }
        
        public UIMarcosWindow2 UIMarcosWindow
        {
            get
            {
                if ((this.mUIMarcosWindow == null))
                {
                    this.mUIMarcosWindow = new UIMarcosWindow2(this);
                }
                return this.mUIMarcosWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITxtBoxPlayerNameWindow2 mUITxtBoxPlayerNameWindow;
        
        private UISentarseWindow2 mUISentarseWindow;
        
        private UIDominóTitleBar2 mUIDominóTitleBar;
        
        private UIPepeWindow mUIPepeWindow;
        
        private UIJessiWindow1 mUIJessiWindow;
        
        private UIMarcosWindow2 mUIMarcosWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITxtBoxPlayerNameWindow2 : WinWindow
    {
        
        public UITxtBoxPlayerNameWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtBoxPlayerName";
            this.WindowTitles.Add("Dominó");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtBoxPlayerNameEdit
        {
            get
            {
                if ((this.mUITxtBoxPlayerNameEdit == null))
                {
                    this.mUITxtBoxPlayerNameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtBoxPlayerNameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Nombre:";
                    this.mUITxtBoxPlayerNameEdit.WindowTitles.Add("Dominó");
                    #endregion
                }
                return this.mUITxtBoxPlayerNameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtBoxPlayerNameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UISentarseWindow2 : WinWindow
    {
        
        public UISentarseWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnSentarse";
            this.WindowTitles.Add("Dominó");
            #endregion
        }
        
        #region Properties
        public WinButton UISentarseButton
        {
            get
            {
                if ((this.mUISentarseButton == null))
                {
                    this.mUISentarseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISentarseButton.SearchProperties[WinButton.PropertyNames.Name] = "Sentarse";
                    this.mUISentarseButton.WindowTitles.Add("Dominó");
                    #endregion
                }
                return this.mUISentarseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISentarseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIDominóTitleBar2 : WinTitleBar
    {
        
        public UIDominóTitleBar2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Dominó");
            #endregion
        }
        
        #region Properties
        public WinButton UICerrarButton
        {
            get
            {
                if ((this.mUICerrarButton == null))
                {
                    this.mUICerrarButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICerrarButton.SearchProperties[WinButton.PropertyNames.Name] = "Cerrar";
                    this.mUICerrarButton.WindowTitles.Add("Dominó");
                    #endregion
                }
                return this.mUICerrarButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICerrarButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIPepeWindow : WinWindow
    {
        
        public UIPepeWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "grpBoxJugador3";
            this.WindowTitles.Add("Dominó");
            #endregion
        }
        
        #region Properties
        public WinGroup UIPepeGroup
        {
            get
            {
                if ((this.mUIPepeGroup == null))
                {
                    this.mUIPepeGroup = new WinGroup(this);
                    #region Search Criteria
                    this.mUIPepeGroup.SearchProperties[WinControl.PropertyNames.Name] = "pepe";
                    this.mUIPepeGroup.WindowTitles.Add("Dominó");
                    #endregion
                }
                return this.mUIPepeGroup;
            }
        }
        #endregion
        
        #region Fields
        private WinGroup mUIPepeGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIJessiWindow1 : WinWindow
    {
        
        public UIJessiWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "grpBoxJugador2";
            this.WindowTitles.Add("Dominó");
            #endregion
        }
        
        #region Properties
        public WinGroup UIJessiGroup
        {
            get
            {
                if ((this.mUIJessiGroup == null))
                {
                    this.mUIJessiGroup = new WinGroup(this);
                    #region Search Criteria
                    this.mUIJessiGroup.SearchProperties[WinControl.PropertyNames.Name] = "jessi";
                    this.mUIJessiGroup.WindowTitles.Add("Dominó");
                    #endregion
                }
                return this.mUIJessiGroup;
            }
        }
        #endregion
        
        #region Fields
        private WinGroup mUIJessiGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIMarcosWindow2 : WinWindow
    {
        
        public UIMarcosWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "grpBoxJugador1";
            this.WindowTitles.Add("Dominó");
            #endregion
        }
        
        #region Properties
        public WinGroup UIMarcosGroup
        {
            get
            {
                if ((this.mUIMarcosGroup == null))
                {
                    this.mUIMarcosGroup = new WinGroup(this);
                    #region Search Criteria
                    this.mUIMarcosGroup.SearchProperties[WinControl.PropertyNames.Name] = "marcos";
                    this.mUIMarcosGroup.WindowTitles.Add("Dominó");
                    #endregion
                }
                return this.mUIMarcosGroup;
            }
        }
        #endregion
        
        #region Fields
        private WinGroup mUIMarcosGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIDominóWindow3 : WinWindow
    {
        
        public UIDominóWindow3()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Dominó";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.FilterProperties[WinWindow.PropertyNames.OrderOfInvocation] = "4";
            this.WindowTitles.Add("Dominó");
            #endregion
        }
        
        #region Properties
        public UITxtBoxPlayerNameWindow3 UITxtBoxPlayerNameWindow
        {
            get
            {
                if ((this.mUITxtBoxPlayerNameWindow == null))
                {
                    this.mUITxtBoxPlayerNameWindow = new UITxtBoxPlayerNameWindow3(this);
                }
                return this.mUITxtBoxPlayerNameWindow;
            }
        }
        
        public UISentarseWindow3 UISentarseWindow
        {
            get
            {
                if ((this.mUISentarseWindow == null))
                {
                    this.mUISentarseWindow = new UISentarseWindow3(this);
                }
                return this.mUISentarseWindow;
            }
        }
        
        public UINuevojugadorGroup UINuevojugadorGroup
        {
            get
            {
                if ((this.mUINuevojugadorGroup == null))
                {
                    this.mUINuevojugadorGroup = new UINuevojugadorGroup(this);
                }
                return this.mUINuevojugadorGroup;
            }
        }
        
        public UIPictureBoxPlayer3PieWindow UIPictureBoxPlayer3PieWindow
        {
            get
            {
                if ((this.mUIPictureBoxPlayer3PieWindow == null))
                {
                    this.mUIPictureBoxPlayer3PieWindow = new UIPictureBoxPlayer3PieWindow(this);
                }
                return this.mUIPictureBoxPlayer3PieWindow;
            }
        }
        
        public UIDominóTitleBar3 UIDominóTitleBar
        {
            get
            {
                if ((this.mUIDominóTitleBar == null))
                {
                    this.mUIDominóTitleBar = new UIDominóTitleBar3(this);
                }
                return this.mUIDominóTitleBar;
            }
        }
        
        public UIMonicaWindow UIMonicaWindow
        {
            get
            {
                if ((this.mUIMonicaWindow == null))
                {
                    this.mUIMonicaWindow = new UIMonicaWindow(this);
                }
                return this.mUIMonicaWindow;
            }
        }
        
        public UIPepeWindow1 UIPepeWindow
        {
            get
            {
                if ((this.mUIPepeWindow == null))
                {
                    this.mUIPepeWindow = new UIPepeWindow1(this);
                }
                return this.mUIPepeWindow;
            }
        }
        
        public UIJessiWindow2 UIJessiWindow
        {
            get
            {
                if ((this.mUIJessiWindow == null))
                {
                    this.mUIJessiWindow = new UIJessiWindow2(this);
                }
                return this.mUIJessiWindow;
            }
        }
        
        public UIMarcosWindow3 UIMarcosWindow
        {
            get
            {
                if ((this.mUIMarcosWindow == null))
                {
                    this.mUIMarcosWindow = new UIMarcosWindow3(this);
                }
                return this.mUIMarcosWindow;
            }
        }
        
        public UIItem6Window UIItem6Window
        {
            get
            {
                if ((this.mUIItem6Window == null))
                {
                    this.mUIItem6Window = new UIItem6Window(this);
                }
                return this.mUIItem6Window;
            }
        }
        
        public UIItem7Window UIItem7Window
        {
            get
            {
                if ((this.mUIItem7Window == null))
                {
                    this.mUIItem7Window = new UIItem7Window(this);
                }
                return this.mUIItem7Window;
            }
        }
        
        public UIItem7Window1 UIItem7Window1
        {
            get
            {
                if ((this.mUIItem7Window1 == null))
                {
                    this.mUIItem7Window1 = new UIItem7Window1(this);
                }
                return this.mUIItem7Window1;
            }
        }
        
        public UIItem7Window2 UIItem7Window2
        {
            get
            {
                if ((this.mUIItem7Window2 == null))
                {
                    this.mUIItem7Window2 = new UIItem7Window2(this);
                }
                return this.mUIItem7Window2;
            }
        }
        #endregion
        
        #region Fields
        private UITxtBoxPlayerNameWindow3 mUITxtBoxPlayerNameWindow;
        
        private UISentarseWindow3 mUISentarseWindow;
        
        private UINuevojugadorGroup mUINuevojugadorGroup;
        
        private UIPictureBoxPlayer3PieWindow mUIPictureBoxPlayer3PieWindow;
        
        private UIDominóTitleBar3 mUIDominóTitleBar;
        
        private UIMonicaWindow mUIMonicaWindow;
        
        private UIPepeWindow1 mUIPepeWindow;
        
        private UIJessiWindow2 mUIJessiWindow;
        
        private UIMarcosWindow3 mUIMarcosWindow;
        
        private UIItem6Window mUIItem6Window;
        
        private UIItem7Window mUIItem7Window;
        
        private UIItem7Window1 mUIItem7Window1;
        
        private UIItem7Window2 mUIItem7Window2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITxtBoxPlayerNameWindow3 : WinWindow
    {
        
        public UITxtBoxPlayerNameWindow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtBoxPlayerName";
            this.WindowTitles.Add("Dominó");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtBoxPlayerNameEdit
        {
            get
            {
                if ((this.mUITxtBoxPlayerNameEdit == null))
                {
                    this.mUITxtBoxPlayerNameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtBoxPlayerNameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Nombre:";
                    this.mUITxtBoxPlayerNameEdit.WindowTitles.Add("Dominó");
                    #endregion
                }
                return this.mUITxtBoxPlayerNameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtBoxPlayerNameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UISentarseWindow3 : WinWindow
    {
        
        public UISentarseWindow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnSentarse";
            this.WindowTitles.Add("Dominó");
            #endregion
        }
        
        #region Properties
        public WinButton UISentarseButton
        {
            get
            {
                if ((this.mUISentarseButton == null))
                {
                    this.mUISentarseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISentarseButton.SearchProperties[WinButton.PropertyNames.Name] = "Sentarse";
                    this.mUISentarseButton.WindowTitles.Add("Dominó");
                    #endregion
                }
                return this.mUISentarseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISentarseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UINuevojugadorGroup : WinGroup
    {
        
        public UINuevojugadorGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Nuevo jugador";
            this.WindowTitles.Add("Dominó");
            #endregion
        }
        
        #region Properties
        public WinWindow UITxtBoxPlayerNameWindow
        {
            get
            {
                if ((this.mUITxtBoxPlayerNameWindow == null))
                {
                    this.mUITxtBoxPlayerNameWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUITxtBoxPlayerNameWindow.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Nombre:";
                    this.mUITxtBoxPlayerNameWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
                    this.mUITxtBoxPlayerNameWindow.WindowTitles.Add("Dominó");
                    #endregion
                }
                return this.mUITxtBoxPlayerNameWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUITxtBoxPlayerNameWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIPictureBoxPlayer3PieWindow : WinWindow
    {
        
        public UIPictureBoxPlayer3PieWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "pictureBoxPlayer3Piece0";
            this.WindowTitles.Add("Dominó");
            #endregion
        }
        
        #region Properties
        public WinClient UIItem6Client
        {
            get
            {
                if ((this.mUIItem6Client == null))
                {
                    this.mUIItem6Client = new WinClient(this);
                    #region Search Criteria
                    this.mUIItem6Client.SearchProperties[WinControl.PropertyNames.Name] = "6";
                    this.mUIItem6Client.WindowTitles.Add("Dominó");
                    #endregion
                }
                return this.mUIItem6Client;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIItem6Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIDominóTitleBar3 : WinTitleBar
    {
        
        public UIDominóTitleBar3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Dominó");
            #endregion
        }
        
        #region Properties
        public WinButton UICerrarButton
        {
            get
            {
                if ((this.mUICerrarButton == null))
                {
                    this.mUICerrarButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICerrarButton.SearchProperties[WinButton.PropertyNames.Name] = "Cerrar";
                    this.mUICerrarButton.WindowTitles.Add("Dominó");
                    #endregion
                }
                return this.mUICerrarButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICerrarButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIMonicaWindow : WinWindow
    {
        
        public UIMonicaWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "grpBoxJugador4";
            this.WindowTitles.Add("Dominó");
            #endregion
        }
        
        #region Properties
        public WinGroup UIMonicaGroup
        {
            get
            {
                if ((this.mUIMonicaGroup == null))
                {
                    this.mUIMonicaGroup = new WinGroup(this);
                    #region Search Criteria
                    this.mUIMonicaGroup.SearchProperties[WinControl.PropertyNames.Name] = "monica";
                    this.mUIMonicaGroup.WindowTitles.Add("Dominó");
                    #endregion
                }
                return this.mUIMonicaGroup;
            }
        }
        #endregion
        
        #region Fields
        private WinGroup mUIMonicaGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIPepeWindow1 : WinWindow
    {
        
        public UIPepeWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "grpBoxJugador3";
            this.WindowTitles.Add("Dominó");
            #endregion
        }
        
        #region Properties
        public WinGroup UIPepeGroup
        {
            get
            {
                if ((this.mUIPepeGroup == null))
                {
                    this.mUIPepeGroup = new WinGroup(this);
                    #region Search Criteria
                    this.mUIPepeGroup.SearchProperties[WinControl.PropertyNames.Name] = "pepe";
                    this.mUIPepeGroup.WindowTitles.Add("Dominó");
                    #endregion
                }
                return this.mUIPepeGroup;
            }
        }
        #endregion
        
        #region Fields
        private WinGroup mUIPepeGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIJessiWindow2 : WinWindow
    {
        
        public UIJessiWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "grpBoxJugador2";
            this.WindowTitles.Add("Dominó");
            #endregion
        }
        
        #region Properties
        public WinGroup UIJessiGroup
        {
            get
            {
                if ((this.mUIJessiGroup == null))
                {
                    this.mUIJessiGroup = new WinGroup(this);
                    #region Search Criteria
                    this.mUIJessiGroup.SearchProperties[WinControl.PropertyNames.Name] = "jessi";
                    this.mUIJessiGroup.WindowTitles.Add("Dominó");
                    #endregion
                }
                return this.mUIJessiGroup;
            }
        }
        #endregion
        
        #region Fields
        private WinGroup mUIJessiGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIMarcosWindow3 : WinWindow
    {
        
        public UIMarcosWindow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "grpBoxJugador1";
            this.WindowTitles.Add("Dominó");
            #endregion
        }
        
        #region Properties
        public WinGroup UIMarcosGroup
        {
            get
            {
                if ((this.mUIMarcosGroup == null))
                {
                    this.mUIMarcosGroup = new WinGroup(this);
                    #region Search Criteria
                    this.mUIMarcosGroup.SearchProperties[WinControl.PropertyNames.Name] = "marcos";
                    this.mUIMarcosGroup.WindowTitles.Add("Dominó");
                    #endregion
                }
                return this.mUIMarcosGroup;
            }
        }
        #endregion
        
        #region Fields
        private WinGroup mUIMarcosGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItem6Window : WinWindow
    {
        
        public UIItem6Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtLblPiecesCountJugador3";
            this.WindowTitles.Add("Dominó");
            #endregion
        }
        
        #region Properties
        public WinText UIItem6Text
        {
            get
            {
                if ((this.mUIItem6Text == null))
                {
                    this.mUIItem6Text = new WinText(this);
                    #region Search Criteria
                    this.mUIItem6Text.SearchProperties[WinText.PropertyNames.Name] = "6";
                    this.mUIItem6Text.WindowTitles.Add("Dominó");
                    #endregion
                }
                return this.mUIItem6Text;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIItem6Text;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItem7Window : WinWindow
    {
        
        public UIItem7Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtLblPiecesCountJugador2";
            this.WindowTitles.Add("Dominó");
            #endregion
        }
        
        #region Properties
        public WinText UIItem7Text
        {
            get
            {
                if ((this.mUIItem7Text == null))
                {
                    this.mUIItem7Text = new WinText(this);
                    #region Search Criteria
                    this.mUIItem7Text.SearchProperties[WinText.PropertyNames.Name] = "7";
                    this.mUIItem7Text.WindowTitles.Add("Dominó");
                    #endregion
                }
                return this.mUIItem7Text;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIItem7Text;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItem7Window1 : WinWindow
    {
        
        public UIItem7Window1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtLblPiecesCountJugador1";
            this.WindowTitles.Add("Dominó");
            #endregion
        }
        
        #region Properties
        public WinText UIItem7Text
        {
            get
            {
                if ((this.mUIItem7Text == null))
                {
                    this.mUIItem7Text = new WinText(this);
                    #region Search Criteria
                    this.mUIItem7Text.SearchProperties[WinText.PropertyNames.Name] = "7";
                    this.mUIItem7Text.WindowTitles.Add("Dominó");
                    #endregion
                }
                return this.mUIItem7Text;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIItem7Text;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItem7Window2 : WinWindow
    {
        
        public UIItem7Window2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtLblPiecesCountJugador0";
            this.WindowTitles.Add("Dominó");
            #endregion
        }
        
        #region Properties
        public WinText UIItem7Text
        {
            get
            {
                if ((this.mUIItem7Text == null))
                {
                    this.mUIItem7Text = new WinText(this);
                    #region Search Criteria
                    this.mUIItem7Text.SearchProperties[WinText.PropertyNames.Name] = "7";
                    this.mUIItem7Text.WindowTitles.Add("Dominó");
                    #endregion
                }
                return this.mUIItem7Text;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIItem7Text;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIDominóWindow4 : WinWindow
    {
        
        public UIDominóWindow4()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Dominó";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.FilterProperties[WinWindow.PropertyNames.OrderOfInvocation] = "5";
            this.WindowTitles.Add("Dominó");
            #endregion
        }
        
        #region Properties
        public UITxtBoxPlayerNameWindow4 UITxtBoxPlayerNameWindow
        {
            get
            {
                if ((this.mUITxtBoxPlayerNameWindow == null))
                {
                    this.mUITxtBoxPlayerNameWindow = new UITxtBoxPlayerNameWindow4(this);
                }
                return this.mUITxtBoxPlayerNameWindow;
            }
        }
        
        public UISentarseWindow4 UISentarseWindow
        {
            get
            {
                if ((this.mUISentarseWindow == null))
                {
                    this.mUISentarseWindow = new UISentarseWindow4(this);
                }
                return this.mUISentarseWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITxtBoxPlayerNameWindow4 mUITxtBoxPlayerNameWindow;
        
        private UISentarseWindow4 mUISentarseWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITxtBoxPlayerNameWindow4 : WinWindow
    {
        
        public UITxtBoxPlayerNameWindow4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtBoxPlayerName";
            this.WindowTitles.Add("Dominó");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtBoxPlayerNameEdit
        {
            get
            {
                if ((this.mUITxtBoxPlayerNameEdit == null))
                {
                    this.mUITxtBoxPlayerNameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtBoxPlayerNameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Nombre:";
                    this.mUITxtBoxPlayerNameEdit.WindowTitles.Add("Dominó");
                    #endregion
                }
                return this.mUITxtBoxPlayerNameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtBoxPlayerNameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UISentarseWindow4 : WinWindow
    {
        
        public UISentarseWindow4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnSentarse";
            this.WindowTitles.Add("Dominó");
            #endregion
        }
        
        #region Properties
        public WinButton UISentarseButton
        {
            get
            {
                if ((this.mUISentarseButton == null))
                {
                    this.mUISentarseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISentarseButton.SearchProperties[WinButton.PropertyNames.Name] = "Sentarse";
                    this.mUISentarseButton.WindowTitles.Add("Dominó");
                    #endregion
                }
                return this.mUISentarseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISentarseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIAceptarWindow : WinWindow
    {
        
        public UIAceptarWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Aceptar";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Button";
            this.WindowTitles.Add("Aceptar");
            #endregion
        }
        
        #region Properties
        public WinButton UIAceptarButton
        {
            get
            {
                if ((this.mUIAceptarButton == null))
                {
                    this.mUIAceptarButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIAceptarButton.SearchProperties[WinButton.PropertyNames.Name] = "Aceptar";
                    this.mUIAceptarButton.WindowTitles.Add("Aceptar");
                    #endregion
                }
                return this.mUIAceptarButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIAceptarButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIDebugWindow : WinWindow
    {
        
        public UIDebugWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Debug";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CabinetWClass";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UIItemWindow1 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow1(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public WinTitleBar UIDebugTitleBar
        {
            get
            {
                if ((this.mUIDebugTitleBar == null))
                {
                    this.mUIDebugTitleBar = new WinTitleBar(this);
                    #region Search Criteria
                    this.mUIDebugTitleBar.WindowTitles.Add("Debug");
                    #endregion
                }
                return this.mUIDebugTitleBar;
            }
        }
        
        public UIPaneldelexploradorPane UIPaneldelexploradorPane
        {
            get
            {
                if ((this.mUIPaneldelexploradorPane == null))
                {
                    this.mUIPaneldelexploradorPane = new UIPaneldelexploradorPane(this);
                }
                return this.mUIPaneldelexploradorPane;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow1 mUIItemWindow;
        
        private WinTitleBar mUIDebugTitleBar;
        
        private UIPaneldelexploradorPane mUIPaneldelexploradorPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Vista Elementos";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UIDominoClienteListItem1 UIDominoClienteListItem
        {
            get
            {
                if ((this.mUIDominoClienteListItem == null))
                {
                    this.mUIDominoClienteListItem = new UIDominoClienteListItem1(this);
                }
                return this.mUIDominoClienteListItem;
            }
        }
        
        public UIDominoClienteexeListItem UIDominoClienteexeListItem
        {
            get
            {
                if ((this.mUIDominoClienteexeListItem == null))
                {
                    this.mUIDominoClienteexeListItem = new UIDominoClienteexeListItem(this);
                }
                return this.mUIDominoClienteexeListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIDominoClienteListItem1 mUIDominoClienteListItem;
        
        private UIDominoClienteexeListItem mUIDominoClienteexeListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIDominoClienteListItem1 : WinListItem
    {
        
        public UIDominoClienteListItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "DominoCliente";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public WinEdit UINombreEdit
        {
            get
            {
                if ((this.mUINombreEdit == null))
                {
                    this.mUINombreEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINombreEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Nombre";
                    this.mUINombreEdit.WindowTitles.Add("Debug");
                    #endregion
                }
                return this.mUINombreEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINombreEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIDominoClienteexeListItem : WinListItem
    {
        
        public UIDominoClienteexeListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "DominoCliente.exe";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public WinControl UIItemImage
        {
            get
            {
                if ((this.mUIItemImage == null))
                {
                    this.mUIItemImage = new WinControl(this);
                    #region Search Criteria
                    this.mUIItemImage.SearchProperties[UITestControl.PropertyNames.ControlType] = "Image";
                    this.mUIItemImage.WindowTitles.Add("Debug");
                    #endregion
                }
                return this.mUIItemImage;
            }
        }
        
        public WinEdit UINombreEdit
        {
            get
            {
                if ((this.mUINombreEdit == null))
                {
                    this.mUINombreEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINombreEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Nombre";
                    this.mUINombreEdit.WindowTitles.Add("Debug");
                    #endregion
                }
                return this.mUINombreEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIItemImage;
        
        private WinEdit mUINombreEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIPaneldelexploradorPane : WinPane
    {
        
        public UIPaneldelexploradorPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Panel del explorador";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public WinCustom UIPaneldevistapreviaCustom
        {
            get
            {
                if ((this.mUIPaneldevistapreviaCustom == null))
                {
                    this.mUIPaneldevistapreviaCustom = new WinCustom(this);
                    #region Search Criteria
                    this.mUIPaneldevistapreviaCustom.SearchProperties[UITestControl.PropertyNames.Name] = "Panel de vista previa";
                    this.mUIPaneldevistapreviaCustom.WindowTitles.Add("Debug");
                    #endregion
                }
                return this.mUIPaneldevistapreviaCustom;
            }
        }
        #endregion
        
        #region Fields
        private WinCustom mUIPaneldevistapreviaCustom;
        #endregion
    }
}
