//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.34209
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DominoCliente.DominoServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PieceData", Namespace="http://schemas.datacontract.org/2004/07/DominoService")]
    [System.SerializableAttribute()]
    public partial class PieceData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int indexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int jugadorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int posicionEnManoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int selectorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int valorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int index {
            get {
                return this.indexField;
            }
            set {
                if ((this.indexField.Equals(value) != true)) {
                    this.indexField = value;
                    this.RaisePropertyChanged("index");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int jugador {
            get {
                return this.jugadorField;
            }
            set {
                if ((this.jugadorField.Equals(value) != true)) {
                    this.jugadorField = value;
                    this.RaisePropertyChanged("jugador");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int posicionEnMano {
            get {
                return this.posicionEnManoField;
            }
            set {
                if ((this.posicionEnManoField.Equals(value) != true)) {
                    this.posicionEnManoField = value;
                    this.RaisePropertyChanged("posicionEnMano");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int selector {
            get {
                return this.selectorField;
            }
            set {
                if ((this.selectorField.Equals(value) != true)) {
                    this.selectorField = value;
                    this.RaisePropertyChanged("selector");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int valor {
            get {
                return this.valorField;
            }
            set {
                if ((this.valorField.Equals(value) != true)) {
                    this.valorField = value;
                    this.RaisePropertyChanged("valor");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerData", Namespace="http://schemas.datacontract.org/2004/07/DominoService")]
    [System.SerializableAttribute()]
    public partial class PlayerData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int posicionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nombre {
            get {
                return this.nombreField;
            }
            set {
                if ((object.ReferenceEquals(this.nombreField, value) != true)) {
                    this.nombreField = value;
                    this.RaisePropertyChanged("nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int posicion {
            get {
                return this.posicionField;
            }
            set {
                if ((this.posicionField.Equals(value) != true)) {
                    this.posicionField = value;
                    this.RaisePropertyChanged("posicion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DominoServiceReference.IDominoService", CallbackContract=typeof(DominoCliente.DominoServiceReference.IDominoServiceCallback))]
    public interface IDominoService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDominoService/RequestSitPlayer")]
        void RequestSitPlayer(string PlayerName);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDominoService/RequestSitPlayer")]
        System.Threading.Tasks.Task RequestSitPlayerAsync(string PlayerName);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDominoService/RequestPutPiece")]
        void RequestPutPiece(DominoCliente.DominoServiceReference.PieceData data);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDominoService/RequestPutPiece")]
        System.Threading.Tasks.Task RequestPutPieceAsync(DominoCliente.DominoServiceReference.PieceData data);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDominoService/PasoElTurno")]
        void PasoElTurno();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDominoService/PasoElTurno")]
        System.Threading.Tasks.Task PasoElTurnoAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDominoServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDominoService/ColocaBot")]
        void ColocaBot(int[] valors, int posicion);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDominoService/ActualizarMarcadores")]
        void ActualizarMarcadores(int[] Marcadores);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDominoService/ElTurnoEsDe")]
        void ElTurnoEsDe(int posicionJugadorConTurno, bool puedePoner, int puedo1, int puedo2);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDominoService/NewPlayerJoined")]
        void NewPlayerJoined(DominoCliente.DominoServiceReference.PlayerData jugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDominoService/PlayerNotSat")]
        void PlayerNotSat(string ErrorMessage);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDominoService/ShowPiece")]
        void ShowPiece(DominoCliente.DominoServiceReference.PieceData pieza);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDominoService/LimpiarCliente")]
        void LimpiarCliente();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDominoService/PutPiece")]
        void PutPiece(DominoCliente.DominoServiceReference.PieceData pieza);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDominoService/NewPieceOnTable")]
        void NewPieceOnTable(DominoCliente.DominoServiceReference.PieceData data);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDominoService/EndGame")]
        void EndGame(int[] Marcadores);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDominoServiceChannel : DominoCliente.DominoServiceReference.IDominoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DominoServiceClient : System.ServiceModel.DuplexClientBase<DominoCliente.DominoServiceReference.IDominoService>, DominoCliente.DominoServiceReference.IDominoService {
        
        public DominoServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public DominoServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public DominoServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public DominoServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public DominoServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void RequestSitPlayer(string PlayerName) {
            base.Channel.RequestSitPlayer(PlayerName);
        }
        
        public System.Threading.Tasks.Task RequestSitPlayerAsync(string PlayerName) {
            return base.Channel.RequestSitPlayerAsync(PlayerName);
        }
        
        public void RequestPutPiece(DominoCliente.DominoServiceReference.PieceData data) {
            base.Channel.RequestPutPiece(data);
        }
        
        public System.Threading.Tasks.Task RequestPutPieceAsync(DominoCliente.DominoServiceReference.PieceData data) {
            return base.Channel.RequestPutPieceAsync(data);
        }
        
        public void PasoElTurno() {
            base.Channel.PasoElTurno();
        }
        
        public System.Threading.Tasks.Task PasoElTurnoAsync() {
            return base.Channel.PasoElTurnoAsync();
        }
    }
}
